attr	type	dim	value	default	formatAs	typeW3C	EQN	loc	value.def
accent-height	NUMERIC	1	<numeric>		1		FALSE	FontFaceElementAccentHeightAttribute	Specifies the distance from the font origin to the top of the accent characters, given in the units of the font coordinate system.
accumulate	LITERAL	1	\emph{'sum'}				FALSE	AccumulateAttribute	Specifies to accumulate values, that is each repeat iteration builds upon the last value of the previous iteration.
accumulate	LITERAL	1	\emph{'none'}	T			FALSE	AccumulateAttribute	Specifies not to accumulate values. (The default)
additive	LITERAL	1	\emph{'sum'}				FALSE	AdditiveAttribute	Specifies that the animation is to add to the underlying value of the attribute and any other lower priority animations.
additive	LITERAL	1	\emph{'replace'}	T			FALSE	AdditiveAttribute	Specifies that the the animation is to replace (override) the underlying value of the attributes. This is the default
alphabetic	NUMERIC	1	<number>		1		FALSE	FontFaceElementAlphabeticAttribute	Specifies an amount of alignment to be used to produce an ideographic baseline alignment, given that the \emph{glyphs} are  horizontally orientated.  The units of this value is the same as the units given by the font coordinate system.
amplitude	NUMERIC	1	<numericr>	1		equation	FALSE	feComponentTransferAmplitudeAttribute	Specifies the amplitude to be used to construct the transfer function when the type is \emph{gamma.}
arabic-form	LITERAL	1	\emph{'initial'}				FALSE	GlyphElementArabicFormAttribute	Specifies the initial \emph{Arabic} \emph{glyph} form.
arabic-form	LITERAL	1	\emph{'medial'}				FALSE	GlyphElementArabicFormAttribute	Specifies the medial \emph{Arabic} \emph{glyph} form.
arabic-form	LITERAL	1	\emph{'terminal'}				FALSE	GlyphElementArabicFormAttribute	Specifies the terminal \emph{Arabic} \emph{glyph} form.
arabic-form	LITERAL	1	\emph{'isolated'}				FALSE	GlyphElementArabicFormAttribute	Specifies the isolated \emph{Arabic} \emph{glyph} form.
attributeName	CHARACTER	1	<attribute-name>		1		FALSE	AttributeNameAttribute	Specifies the name of the target attribute.
attributeType	LITERAL	1	\emph{'CSS'}		1-C	const	FALSE	AttributeTypeAttribute	Specifies that the value of \emph{'attributeName'} should be interpreted  as the name of a CSS property.
attributeType	LITERAL	1	\emph{'XML'}		1-C	const	FALSE	AttributeTypeAttribute	Specifies that the value of  \emph{'attributeName'} should be interpreted as the name of a XML attribute
attributeType	LITERAL	1	\emph{'auto'}	TRUE	1-C	const	FALSE	AttributeTypeAttribute	Specifies to discover the value by searching for the matching property name, first through the CSS, then if not found then searching next through the XML.
azimuth	ANGLE	1	<angle>				FALSE	feDistantLightAzimuthAttribute	Specifies the azimuth angle (in degrees). The azimuth angle is defined as the angle between the x-axis and the projection into the xy-plane of vector from the origin to the light source. This angle is measured clockwise.
baseFrequency	NUMERIC	1,2	<numeric>[1 or 2] (=fx or c(fx,fy))	0			TRUE	feTurbulenceBaseFrequencyAttribute	Specifies the base frequency parameter, \eqn{f_x}, \eqn{f_y}, used to generate the noise function in the X, Y directions respectively. The default for \eqn{f_x} is 0 (no effect), the default for \eqn{f_y} is \eqn{f_x}.
baseProfile	CHARACTER	1	<profile-name>				FALSE	SVGElementBaseProfileAttribute	Specifies a minimum SVG language profile considered necessary for correct content rendering.
bbox	NUMERIC	4	<numeric>[4] (=c(left-x, lower-y, right-x, upper-y))				FALSE	FontFaceElementBboxAttribute	Specifies the maximal bounding box of the font. This is represented as a vector c(lower-left-x, lower-left-y, upper-right-x, upper-right-y).
begin	??	C-V-UL	<offset-value>	seconds	V-C L-C		FALSE	BeginAttribute	Specifies when to begin the animation, based upon an offset (+ or - ) from the implicit synbase (default is seconds)
begin	??	C-V-UL	<syncbase-value>		V-C L-C		FALSE	BeginAttribute	Specifies when to begin the animation, based upon an offset (+ or - ) from the explicit synbase given by the begin or end of the element referenced by Id.value
begin	??	C-V-UL	<event-value>		V-C L-C		FALSE	BeginAttribute	Specifies when to begin the animation, based upon an offset (+ or - ) relative to when the event referenced occurs.
begin	??	C-V-UL	<repeat-value>		V-C L-C		FALSE	BeginAttribute	Specifies when to begin the animation, based upon an offset (+ or - ) relative to a repeating event.
begin	??	C-V-UL	<accessKey-value>		V-C L-C		FALSE	BeginAttribute	Specifies when to begin the animation, based upon an offset (+ or - ) relative to an access key event of the specified character.
begin	??	C-V-UL	<wallclock-sync-value>		V-C L-C		FALSE	BeginAttribute	Specifies when to begin the animation, based on wall clock time.
begin	LITERAL	1	\emph{'indefinite'}		V-C	const	FALSE	BeginAttribute	Specifies when to begin the animation, using a \emph{beginElement()} method call or a hyperlink targeted to the element to trigger the begin.
bias	??	1	<numeric>	0			FALSE	feConvolveMatrixElementBiasAttribute	Specifies the value to be added to each image component after applying the \emph{kernelMatrix} and \emph{divisor.}
by	??	1	<value>		V		FALSE	ByAttribute	Specifies the relative offset value to be used to compute the final ending value, That is  \eqn{endValue = startingValue + by}. This overrides any \emph{from to} specification.
calcMode	LITERAL	1	\emph{'discrete'}		1-C		FALSE	CalcModeAttribute	Specifies a discrete jump to the next value without any intermediate transitioning.
calcMode	LITERAL	1	\emph{'linear'}	TRUE	1-C		FALSE	CalcModeAttribute	Specifies an intermediate transitioning based on a linear interpolation across time from the starting value to the ending value. (This is the the default for all except for \emph{animateMotion})
calcMode	LITERAL	1	\emph{'paced'}		1-C		FALSE	CalcModeAttribute	Specifies an even paced intermediate transitioning. This is the default for \emph{animateMotion}.
calcMode	LITERAL	1	\emph{'spline'}		1-C		FALSE	CalcModeAttribute	Specifies an intermediate transitioning based on a cubic Bezier spline with points defined using the \emph{keyTimes} and \emph{keySplines} attributes.
cap-height	NUMERIC	1	<numeric>		1		FALSE	FontFaceElementCapHeightAttribute	Specifies the height of uppercase \emph{glyphs} of the font using \emph{units per em}.
class	ULIST	M	<character>[[N]]				FALSE	ClassAttribute	Specifies one or more class names to be assigned to this element.
class	CHARACTER	M	<character>[N]				FALSE	ClassAttribute	Specifies one or more class names to be assigned to this element.
clipPathUnits	LITERAL	1	\emph{'userSpaceOnUse'}	T			FALSE	ClipPathElementClipPathUnitsAttribute	Specifies that the coordinate system for the contents of the \emph{'clipPath'} is given in terms of the specific user coordinate system that is in effect at the time of clipPath referrencing. (Default)
clipPathUnits	LITERAL	1	\emph{'objectBoundingBox'}				FALSE	ClipPathElementClipPathUnitsAttribute	Specifies that the coordinate system for the contents of the \emph{'clipPath'} is given in terms of the bounding box of target object(s) to be clipped.
contentScriptType	LITERAL	1	\emph{'content.type'}	application/ecmascript			FALSE	SVGElementContentScriptTypeAttribute	Specifies the default scripting language used in processing \emph{svg} events. Default is\emph{'application/ecmascript'}.
contentScriptType	CHARACTER	1	<content-type>	application/ecmascript			FALSE	ContentScriptTypeAttribute	Specifies the default scripting language of the event attributes value strings. The default is \emph{'application/ecmascript'}.
contentStyleType	CHARACTER	1	<content-type>	text/css			FALSE	SVGElementContentStyleTypeAttribute	"Specifies the default style sheet, Default is """"""""""""""""text/css"""""""""""""""""""""""""""""""" Has limited support. \strong{Deprecated}."
contentStyleType	CHARACTER	1	<content-type>	text/css			FALSE	ContentStyleTypeAttribute	Specifies a default style sheet language for the given document.
cx	COORDINATE	1	<coordinate>	0			TRUE	CircleElementCXAttribute	Specifies the x- coordinate, \eqn{c_x} of the center of the \strong{circle}. Default is 0.
cx	COORDINATE	1	<coordinate>	0			TRUE	EllipseElementCXAttribute	Specifies the x- coordinate, \eqn{c_x} of the center of the \strong{ellipse}. Default is 0.
cx	COORDINATE	1	<coordinate>	50.00%			FALSE	RadialGradientElementCXAttribute	Specifies the x-coordinate of the center of outermost circle of the radial gradient. (The outermost circle being the location of the final gradient stop.) Default is 0.50  .
cy	COORDINATE	1	<coordinate>	0			TRUE	CircleElementCYAttribute	Specifies the y- coordinate, \eqn{c_y} of the center of the \strong{circle}. Default is 0.
cy	COORDINATE	1	<coordinate>	0			TRUE	EllipseElementCYAttribute	Specifies the y- coordinate, \eqn{c_y} of the center of the\strong{ellipse}. Default is 0.
cy	COORDINATE	1	<coordinate>	100.00%			FALSE	RadialGradientElementCYAttribute	Specifies the y-coordinate of the center of outermost circle of the radial gradient. (The outermost circle being the location of the final gradient stop.) Default is 0.50 .
d	PATH-DATA_VECTOR	1	<path-data-vector>				FALSE	GlyphElementDAttribute	Specifies the outline of the glyph path as a vector, built from both \emph{path commands} (M, m, Z, z, L, l, H, h, V, v) and the points those commands are to operate on.
d	PATH-NAMED-LIST	1	<path-data-list>				FALSE	GlyphElementDAttribute	Specifies the outline of the glyph path as a named list, with names originating from the \emph{path commands}: M, m, Z, z, L, l, H, h, V, v.
d	PATH-NAMED-LIST	1	<path-data-list>				FALSE	DAttribute	Specifies the path-data used to create a \emph{path}.
descent	NUMERIC	1	<number>		1		FALSE	FontFaceElementDescentAttribute	Specifies an maximum unaccented font depth with respect to the font coordinate system.
diffuseConstant	NON-NEG-NUM	1	<numeric>	1			TRUE	feDiffuseLightingDiffuseConstantAttribute	Specifies a scaling factor for the resulting RGB components, It is the \eqn{kd} in \emph{Phong lighting model}. Default=1.
divisor	NON-ZERO-NUM	1	<numeric>				FALSE	feConvolveMatrixElementDivisorAttribute	Specifies a divisor to scale down the resulting image component values obtained by multiply by the \emph{kernelMatrix}.
dur	POS-NUM	1	<clock-value>	0	1-C		FALSE	DurAttribute	Specifies the length of the simple duration in presentation time. This value must be greater than 0. (The default unis is in seconds)
dur	LITERAL	1	\emph{'media'}		1-C		FALSE	DurAttribute	Specifies the simple duration as the intrinsic media duration.
dur	LITERAL	1	\emph{'indefinite'}		1-C		FALSE	DurAttribute	Specifies the simple duration as \emph{indefinite}, that is the animation is to continue indefinitely.
dx	NUMERIC	1	<number>	0	0		FALSE	feOffsetDxAttribute	Specifies to offset the input graphic by the amount dx along the x-axis, where dx is is given in the \emph{primitiveUnits} terms of the \strong{filter}. Default for dx is dx=0.
dx	LENGTH	V-L	<length>[N]				FALSE	TextElementDXAttribute	Specifies a sequence of x-shifts starting with the current text position for the characters within this \strong{text} element or any of its descendants.
dx	LENGTH	V-L	<length>[N]				FALSE	TSpanElementDXAttribute	Specifies a sequence of x-shifts starting with the current text position for the characters within this \strong{tspan} or any of its descendants.
dx	LENGTH	V-L	<length>[N]				FALSE	AltGlyphElementDXAttribute	Specifies the x-shifts values for the \strong{altGlyph} element. If rendering only unicode characters inside an \strong{altGlyph} element, then this specifies the absolute x-shift for the first n characters where n is the length of the dx-vector . If rendering alternate \emph{glyphs}, then dx[1] specifies a x-shift of the current text position, while the remainder, dx[-1], is ignored.
dx	NUMERIC	1	<numeric>				FALSE	GlyphRefElementDXAttribute	Specifies an x-shift for this glyph using the font's coordinate system for this glyph.
dy	NUMERIC	1	<numeric>	0	0		FALSE	feOffsetDyAttribute	Specifies to offset the input graphic by the amount dy along the y-axis, where dy is is given in the \emph{primitiveUnits} terms of the \emph{filter}. Default is dy=0.
dy	LENGTH	V-L	<length>[N]				FALSE	TextElementDYAttribute	Specifies a sequence of y-shifts starting with the current text position for the characters within this element or any of its descendants
dy	LENGTH	V-L	<length>[N]				FALSE	TSpanElementDYAttribute	Specifies a sequence of y-shifts starting with the current text position for the characters within this \strong{tspan} or any of its descendants
dy	LENGTH	V-L	<length>[N]				FALSE	AltGlyphElementDYAttribute	Specifies a sequence of  the y-shifts values for the \emph{altGlyph} element. If rendering only unicode characters inside an \strong{altGlyph} element, then this specifies the absolute y-shift for the first n characters where n is the length of the dy-vector . If rendering alternate \emph{glyphs}, then dy[1] specifies a y-shift of the current text position, while the remainder, dy[-1], is ignored.
dy	NUMERIC	1	<number>				FALSE	GlyphRefElementDYAttribute	Specifies a y-shift for this \emph{glyph} using the font's coordinate system for this glyph.
edgeMode	LITERAL	1	\emph{'duplicate'}				FALSE	feConvolveMatrixElementEdgeModeAttribute	Specifies to extended the input image along the borders by duplication color values.
edgeMode	LITERAL	1	\emph{'wrap'}				FALSE	feConvolveMatrixElementEdgeModeAttribute	Specifies to extended the input image along the borders by using a wrap around of the color values.
edgeMode	LITERAL	1	\emph{'none'}				FALSE	feConvolveMatrixElementEdgeModeAttribute	Specifies to extended the input image along the borders by using a zero color value.
elevation	ANGLE	1	<angle>				FALSE	feDistantLightElevationAttribute	Specifies the elevation angle (in degrees). The elevation angle is defined as the between the z-axis and the vector from the origin to the light source.
end	??	1	<offset-value>		V-C L-C		FALSE	EndAttribute	Specifies when to end the animation, based upon an offset (+ or - ) from the implicit \emph{synbase} (without units the default is seconds)
end	??	1	<syncbase-value>		V-C L-C		FALSE	EndAttribute	Specifies when to end the animation, based upon an offset (+ or - ) from the explicit \emph{synbase} given by the begin or end of the element referenced by id-value.
end	??	1	<event-value>		V-C L-C		FALSE	EndAttribute	Specifies when to end the animation, based upon an offset (+ or - ) relative to when the event referenced occurs.
end	??	1	<repeat-value>		V-C L-C		FALSE	EndAttribute	Specifies when to end the animation, based upon an offset (+ or - ) relative to a repeating event.
end	??	1	<accessKey-value>		V-C L-C		FALSE	EndAttribute	Specifies when to end the animation, based upon an offset (+ or - ) relative to an access key event of the specified character.
end	??	1	<wallclock-sync-value>		V-C L-C		FALSE	EndAttribute	Specifies when to end the animation, base on wall clock time.
end	LITERAL	1	\emph{'indefinite'}		V-C	const	FALSE	EndAttribute	Specifies when to end the animation, using a \emph{endElement()} method call or a hyperlink targeted to the element to trigger the end.
exponent	NUMERIC	1	<numeric>			equation	FALSE	feComponentTransferExponentAttribute	Specifies the exponent to be used to construct the transfer function when the type is \eqn{\gamma}.
externalResourcesRequired	LITERAL	1	\emph{'false'}	T			FALSE	ExternalResourcesRequiredAttribute	Specifies that resources external to the current document are considered optional, (Default)
externalResourcesRequired	LITERAL	1	\emph{'true'}				FALSE	ExternalResourcesRequiredAttribute	Specifies that resources external to the current document are NOT considered optional. Thus if any external resource is not available, rendering is suspended and an error document error state occurs.
in2	LITERAL	1	\emph{'SourceGraphic'}				FALSE	feBlendIn2Attribute	Specifies that for the second input, \emph{in2}, to take the original graphic source.
in2	LITERAL	1	\emph{'SourceAlpha'}				FALSE	feBlendIn2Attribute	Specifies that for the second input, \emph{in2}, to take the \emph{alpha channel} of original graphic source.
in2	LITERAL	1	\emph{'BackgroundImage'}				FALSE	feBlendIn2Attribute	Specifies that for the second input, \emph{in2}, to take the image snapshot of the filter region at the time filter was invoked.
in2	LITERAL	1	\emph{'BackgroundAlpha'}				FALSE	feBlendIn2Attribute	Specifies that for the second input, \emph{in2} to take the \emph{alpha channel} of the filter region image.
in2	LITERAL	1	\emph{'FillPaint'}				FALSE	feBlendIn2Attribute	Specifies to take the fill property on the target element as input for \emph{in2}.
in2	LITERAL	1	\emph{'StrokePaint'}				FALSE	feBlendIn2Attribute	Specifies to take the \emph{stroke} property on the target element as input for \emph{in2}.
in2	CHARACTER	1	<filter-primitive-reference>				FALSE	feBlendIn2Attribute	Specifies for input \emph{in2} to take the results of the referenced filter primitive. Moreover, if a filter primitive has assigned results='foo', then tp use the results of that filter as the second input, simply set \emph{in2}='foo'.
in2	ELEMENT	1	<filterPrimitveElement>				FALSE	feBlendIn2Attribute	Specifies for input \emph{in2} to take the results of the given \emph{filterPrimitveElement}. In this case, it is not necessary assign a value to results for the given \emph{filterPrimitive}.
fill	LITERAL	1	\emph{'freeze'}		1-C		FALSE	FillAttribute	Specifies upon completing the animation to freeze in place, there by keeping the last value for that animation frozen.
fill	LITERAL	1	\emph{'remove'}		1-C		FALSE	FillAttribute	Specifies upon completing the animation to return to the initial state, that being what value the attribute had prior to the start of the animation.
filterRes	NON-NEG-NUM	1,2	<numeric>[1or2]				FALSE	FilterElementFilterResAttribute	Specifies an intermediate \emph{width} and \emph{height} in pixels. If not specified, the user agent will try to insure high quality with a good guess.
filterUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	FilterElementFilterUnitsAttribute	Specifies to interpret \emph{x, y, width, height ( or xy, wh)} as current user coordinates.
filterUnits	LITERAL	1	\emph{'objectBoundingBox'}				FALSE	FilterElementFilterUnitsAttribute	Specifies to interpret \emph{x, y, width, height ( or xy, wh)} as fractions (or percentages)
font-family	CHARACTER	1	<character>[N]		1-V		FALSE	FontFaceElementFontFamilyAttribute	Specifies, as a character vector, one or more font family names.
font-size	LITERAL	1	\emph{'all'}		1-V		FALSE	FontFaceElementFontSizeAttribute	Specifies all size (suitable for scalable fonts)
font-size	LENGTH	1	<length>		1-V		FALSE	FontFaceElementFontSizeAttribute	Specifies the font size (suitable for bitmap fonts)
font-stretch	LITERAL	1	\emph{'all'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies to apply all font factors.
font-stretch	LITERAL	1	\emph{'normal'}	T	1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies no stretching and no condensing of the \emph{glyphs}.
font-stretch	LITERAL	1	\emph{'ultra-condensed'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies maximum condensing (ultra) of the \emph{glyphs}.
font-stretch	LITERAL	1	\emph{'extra-condensed'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies a slightly more condensed than \emph{condensed}.
font-stretch	LITERAL	1	\emph{'condensed'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies a slightly more condensed than \emph{semi-condensed}.
font-stretch	LITERAL	1	\emph{'semi-condensed'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies a slightly more condensed than \emph{normal}.
font-stretch	LITERAL	1	\emph{'semi-expanded'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies a slightly more expanded than \emph{normal}.
font-stretch	LITERAL	1	\emph{'expanded'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies a slightly more expanded than the \emph{semi-expanded}  amount of stretching.
font-stretch	LITERAL	1	\emph{'extra-expanded'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies a slightly more expanded than \emph{expanded}  amount of stretching.
font-stretch	LITERAL	1	\emph{'ultra-expanded'}		1-V		FALSE	FontFaceElementFontStretchAttribute	Specifies the maximum amount of stretching.
font-style	LITERAL	1	\emph{'all'}		1-V		FALSE	FontFaceElementFontStyleAttribute	Specifies all three font styles.
font-style	LITERAL	1	\emph{'normal'}		1-V		FALSE	FontFaceElementFontStyleAttribute	Specifies a \emph{normal} font style.
font-style	LITERAL	1	\emph{'italic'}		1-V		FALSE	FontFaceElementFontStyleAttribute	Specifies an \emph{italic} font style
font-style	LITERAL	1	\emph{'oblique'}		1-V		FALSE	FontFaceElementFontStyleAttribute	Specifies an \emph{oblique} font style.
font-variant	LITERAL	1	\emph{'normal'}		1-V		FALSE	FontFaceElementFontVariantAttribute	Specifies the \emph{normal} font variant.
font-variant	LITERAL	1	\emph{'small-caps'}		1-V		FALSE	FontFaceElementFontVariantAttribute	Specifies \emph{small-caps} variant of the font.
font-weight	LITERAL	1	\emph{'all'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies to match all possible weights.
font-weight	LITERAL	1	\emph{'normal'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a \emph{normal} weight (i.e. 400)
font-weight	LITERAL	1	\emph{'bold'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a \emph{bold} weight (i.e. 700)
font-weight	LITERAL	1	\emph{'100'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 100 font weight (lightest)
font-weight	LITERAL	1	\emph{'200'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 200 font weight.
font-weight	LITERAL	1	\emph{'300'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 300 font weight.
font-weight	LITERAL	1	\emph{'400'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 400 font weight. (Normal.)
font-weight	LITERAL	1	\emph{'500'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 500 font weight.
font-weight	LITERAL	1	\emph{'600'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 600 font weight
font-weight	LITERAL	1	\emph{'700'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 700 font weight
font-weight	LITERAL	1	\emph{'800'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 800 font weight
font-weight	LITERAL	1	\emph{'900'}		1-V		FALSE	FontFaceElementFontWeightAttribute	Specifies a 900 font weight. (Boldest)
format	CHARACTER	1	<glyph-format>				FALSE	AltGlyphElementFormatAttribute	Specifies a \emph{alt-Glyph} format.
format	CHARACTER	1	<glyph-format>				FALSE	GlyphRefElementFormatAttribute	Specifies a \emph{Glyph} format.
from	VALUE	1	<attribute-value>		1		FALSE	FromAttribute	Specifies the initial value of the attribute chosen for animation.
fx	COORDINATE	1	<coordinate>	50.00%			FALSE	RadialGradientElementFXAttribute	Specifies the x-coordinate of the focal point of the radial gradient. (The focal point being the location of the initial gradient stop.) Default is 0.50  .
fy	COORDINATE	1	<coordinate>	50.00%			FALSE	RadialGradientElementFYAttribute	Specifies the y-coordinate of the focal point of the radial gradient. (The focal point being the location of the initial gradient stop.) Default is 0.50 .
g1	CHARACTER	M	<glyph-names>[N]				FALSE	HKernElementG1Attribute	Specifies a set of candiate 1st \emph{glyphs} in the kerning pair using a vector of glyph names.
g2	CHARACTER	M	<glyph-names>[N]				FALSE	HKernElementG2Attribute	Specifies a set of candiate 2nd \emph{glyphs} in the kerning pair using a vector of glyph names.
glyph-name	CHARACTER	M	<glyph-names>[N]				FALSE	GlyphElementGlyphNameAttribute	Specifies a vector of one or more glyph names
glyphRef	IRI	1	<string>				FALSE	AltGlyphElementGlyphRefAttribute	Specifies a \emph{glyph} identifier. The format of the font will determine the \emph{glyph} identifier format.
glyphRef	IRI	1	<string>				FALSE	GlyphRefElementGlyphRefAttribute	Specifies a \emph{glyph} identifier.
gradientTransform	TRANSFORMLIST	1	<transform-list>	Identity			FALSE	LinearGradientElementGradientTransformAttribute	Specifies sequence transforms of the gradient. Exotic effects, such as skewing can be made using these additional transforms. The default is the identity.
gradientTransform	TRANSFORMLIST	1	<transform-list>	Identity			FALSE	RadialGradientElementGradientTransformAttribute	Specifies sequence transforms of the gradient. Exotic effects, such as skewing can be made using these additional transforms. The default is the identity.
gradientUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	LinearGradientElementGradientUnitsAttribute	Specifies that the gradient values for \emph{'x1'}, \emph{'y1'}, \emph{'x2'} and \emph{'y2'} are given in terms of the user coordinate system in effect at the time when the gradient element is referenced.
gradientUnits	LITERAL	1	\emph{'objectBoundingBox'}	T			FALSE	LinearGradientElementGradientUnitsAttribute	Specifies that the gradient values for \emph{'x1'}, \emph{'y1'}, \emph{'x2'} and \emph{'y2'} are given in terms fractions (or percentages) of the bounding box of the target element to which the gradient is applied. In this case c(0, 0) is the coordinates of the upper left-hand corner of the bounding, and c(1, 0) is the coordinates of the lower right-hand corner of the bounding box.
gradientUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	RadialGradientElementGradientUnitsAttribute	Specifies that \emph{'cx'}, \emph{'cy'}, \emph{'r'}, \emph{'fx'} and \emph{'fy'} represent values in the user coordinate system in effect when the radial gradient element is referenced.
gradientUnits	LITERAL	1	\emph{'objectBoundingBox'}	T			FALSE	RadialGradientElementGradientUnitsAttribute	Specifies that the user coordinate system for attributes \emph{'cx'}, \emph{'cy'}, \emph{'r'}, \emph{'fx'} and \emph{'fy'} are given in terms of fractions (or percentages) of the bounding box of the target element to which the gradient is applied. In this case c(0, 0) is the coordinates of the upper left-hand corner of the bounding, and c(1, 0) is the coordinates of the lower right-hand corner of the bounding box. Default.
hanging	NUMERIC	1	<numeric>		1		FALSE	FontFaceElementHangingAttribute	Specifies the vaule of the alignment amount to use to to produce an ideographic baseline alignment. This amount is given in the same units as in the font coordinate system. This alignment is applicable for horizontally orientated \emph{glyphs}.
height	LENGTH	1	<length>	120.00%			FALSE	FilterElementHeightAttribute	Specifies the \emph{bounding box height} of the filter in terms of the filterUnits. (The default is 1.20).
height	LENGTH	1	<length>				FALSE	FilterPrimitiveHeightAttribute	Specifies the \emph{height} of \emph{filter primitive subregion}. The filter primitive subregion is a rectangular region over which both filter primitive calculations and rendering occurs.
height	LENGTH	1	<length>				FALSE	SVGElementHeightAttribute	Specifies the \emph{height} of an \emph{svg}. This can be  applied to both for an embedded \strong{svg} and an outer-most \strong{svg} (i.e. svgR).
height	LENGTH	1	<length>				FALSE	UseElementHeightAttribute	Specifies the \emph{height} of the rectangular region into which the referenced element by use is to be placed.
height	LENGTH	1	<length>				FALSE	ImageElementHeightAttribute	Specifies the \emph{height} of the rectangular region into which the image element is to be placed.
height	LENGTH	1	<length>				FALSE	RectElementHeightAttribute	Specifies the \emph{height} of the rectangle (the distance between the top and bottom.)
height	LENGTH	1	<length>[1 or 2]	1.2			TRUE	MaskElementHeightAttribute	Specifies the \emph{height} of the rectangle defining the offscreen buffer used in computing the masked image. The resulting masked image is the intersection of the mask and that buffer. The default is y=.1, height=1.2, maskUnits=\emph{'objectBoundingBox'}. Note: \eqn{height geq 0}.s if a value of \emph{'120'} were specified.Animatable. yes.
height	LENGTH	1	<length>				TRUE	ForeignObjectElementHeightAttribute	Specifies the \emph{height} of the rectangular region into which into which the \emph{'foreignObject'} will be rendered. Requires \eqn{height \\geq 0}.
height	LENGTH	1	<length>				FALSE	PatternElementHeightAttribute	Specifies a tile \emph{height.} (Must be non-negative).
horiz-adv-x	NON-NEG-INTEGER	1	<number>				FALSE	FontElementHorizAdvXAttribute	Specifies what the default horizontal advance should be after rendering in a horizontal orientation. Needs to be non-negative.
horiz-adv-x	NON-NEG-INTEGER	1	<number>				FALSE	GlyphElementHorizAdvXAttribute	Specifies what the default horizontal advance should be after rendering in a horizontal orientation. Needs to be non-negative.
horiz-origin-x	COORDINATE	1	<coordinate>				FALSE	FontElementHorizOriginXAttribute	Specifies the x-coordinate of the glyph origin relative to the font coordinate system in horizontal text mode. Default=0.
horiz-origin-y	COORDINATE	1	<coordinate>				FALSE	FontElementHorizOriginYAttribute	Specifies the y-coordinate of the glyph origin relative to the font coordinate system in horizontal text mode. Default=0.
id	CHARACTER	1	<name>				FALSE	IDAttribute	Specifies name to assign to an element. Should be unique.
ideographic	NUMERIC	1	<number>		1		FALSE	FontFaceElementIdeographicAttribute	Specifies, in font coordinates, for horizontally orientated \emph{glyphs}, the alignment to produce an ideographic baseline alignment.
in1	LITERAL	1	\emph{'SourceGraphic'}				FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, the original graphic source.
in1	LITERAL	1	\emph{'SourceAlpha'}				FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, taking the alpha channel of the original graphic source.
in1	LITERAL	1	\emph{'BackgroundImage'}				FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, the image snapshot of the filter region in effect at the time filter was invoked.
in1	LITERAL	1	\emph{'BackgroundAlpha'}				FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, the \emph{alpha channel} of the filter region image.
in1	LITERAL	1	\emph{'FillPaint'}				FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, the \emph{fill} property on the target element.
in1	LITERAL	1	\emph{'StrokePaint'}				FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, the \emph{stroke} property on the target element.
in1	CHARACTER	1	<filter-primitive-reference>			in1	FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, the results of the referenced filter primitive.
in1	ELEMENT	1	<filterPrimitveElement>			in1	FALSE	FilterPrimitiveInAttribute	Specifies taking as the first graphics input argument, \emph{in1}, the results of the given \strong{filterPrimitveElement}.
in2	LITERAL	1	\emph{'SourceGraphic'}				FALSE	feDisplacementMapIn2Attribute	Specifies to use the original graphic source to calculate displacement values.
in2	LITERAL	1	\emph{'SourceAlpha'}				FALSE	feDisplacementMapIn2Attribute	Specifies to use the \emph{alpha channel} of original graphic source to calculate displacement values.
in2	LITERAL	1	\emph{'BackgroundImage'}				FALSE	feDisplacementMapIn2Attribute	Specifies to use the image snapshot of the filter region at the time filter was invoked to calculate displacement values.
in2	LITERAL	1	\emph{'BackgroundAlpha'}				FALSE	feDisplacementMapIn2Attribute	Specifies to use the the \emph{alpha channel} of the filter region image to calculate displacement values.
in2	LITERAL	1	\emph{'FillPaint'}				FALSE	feDisplacementMapIn2Attribute	Specifies to use the \emph{fill} property on the target element to calculate displacement values.
in2	LITERAL	1	\emph{'StrokePaint'}				FALSE	feDisplacementMapIn2Attribute	Specifies to use the \emph{stroke} property on the target element to calculate displacement values.
in2	CHARACTER	1	<filter-primitive-reference>				FALSE	feDisplacementMapIn2Attribute	Specifies to use the results of the referenced filter primitive to calculate displacement values.
in2	ELEMENT	1	<filterPrimitveElement>				FALSE	feDisplacementMapIn2Attribute	Specifies to use the results of the given \emph{filterPrimitveElement} to calculate displacement values.
intercept	NUMERIC	1	<number>			equation	FALSE	feComponentTransferInterceptAttribute	Specifies the intercept to be used to construct the transfer function when the type is \emph{linear}.
k	NUMERIC	1	<numeric>	0			FALSE	HKernElementKAttribute	Specifies an reduction in the spacing, relative to the font coordinate system, between the two \emph{glyphs} of the kerning pair. ( Required.)
k1	NUMERIC	1	<numeric>	0			FALSE	feCompositeK1Attribute	Specifies the \emph{k1} coefficient for the \emph{arithmetic composite operator}.
k2	NUMERIC	1	<numeric>	0			FALSE	feCompositeK2Attribute	Specifies the \emph{k2} coefficient for the \emph{arithmetic composite operator}.
k3	NUMERIC	1	<numeric>	0			FALSE	feCompositeK3Attribute	Specifies the \emph{k3} coefficient for the \emph{arithmetic composite operator}.
k4	NUMERIC	1	<numeric>	0			FALSE	feCompositeK4Attribute	Specifies the \emph{k4} coefficient for the \emph{arithmetic composite operator}.
kernelMatrix	NUMERIC	lenght(order)	<numeric>[N]				FALSE	feConvolveMatrixElementKernelMatrixAttribute	Specifies the entries of the \emph{kernelMatrix}.
kernelMatrix	POS-NUMERIC	order	matrix[N.M]				FALSE	feConvolveMatrixElementKernelMatrixAttribute	Specifies the  \emph{kernelMatrix} using a matrix.
kernelUnitLength	c(dx,dy)	1,2	<numeric>[1 or 2]	1			FALSE	feConvolveMatrixElementKernelUnitLengthAttribute	Specifies a dx, (dy) distance(s) in current filter units between successive rows and columns. Default for dx is 1 pixel, default for dy is dx.
kernelUnitLength	c(dx,dy)	1,2	<numeric>[1 or 2]	1			FALSE	feDiffuseLightingKernelUnitLengthAttribute	Specifies the dx, (dy), to be used to build the implicit pixel grid for the filter. By default, dx is 1 pixel, dy is the value of dx.
kernelUnitLength	c(dx,dy)	1,2	<numeric>[1 or 2]				FALSE	feSpecularLightingKernelUnitLengthAttribute	Specifies the dx, (dy) to be used in calculating the unit normal vector. The default for dx is a small distance, the default for dy is dx. It is advised that at minimal, one should specifies filterRes or kernelUnitLength to assure consistency across displays.
keyPoints	NUMERIC[0-1]	M	<numeric-in-the-[0,1]-range>[N]		v		FALSE	KeyPointsAttribute	Specifies points as a numeric vector with values in the (0-1) range, with 0 being the start, and 1 being the end. The length of this value should match in length of the keytimes attribute value.
keySplines	LIST	[N][4]	<coordinates>[[N]][4]		1-L		FALSE	KeySplinesAttribute	A list of Bezier control points associated with the \emph{'keyTimes'} list. Each pt has 4 values, \emph{x1, y1, x2, y2} with values in the range between 0 and 1.
keySplines	MATRIX	4xN	<coordinates>[4,N]		1-M		FALSE	KeySplinesAttribute	A 4xN matrix whose columns are the Bezier control points associated with the \emph{'keyTimes'} list. Each pt has 4 values, x1, y1, x2, y2 with values in the range between 0 and 1.
keyTimes	LIST	N	<numeric>[N]		L-N		FALSE	KeyTimesAttribute	A list of time values used to control the pacing of the animation. Each time in the list corresponds to a value in the values attribute list
keyTimes	MATRIX	1	<numeric>		V-N		FALSE	KeyTimesAttribute	A vector of time values used to control the pacing of the animation. Each time in the list corresponds to a value in the values attribute list
lang	CHARACTER	M	<language-codes>				FALSE	GlyphElementLangAttribute	Specifies a language code name as defined in BCP 47.
lengthAdjust	LITERAL	1	\emph{'spacing'}				FALSE	TextElementLengthAdjustAttribute	Specifies to the user agent, that when attempting to match the rendered text length with the value specified by the \emph{'textLength'} attribute, only spacing adjustments are allowed.
lengthAdjust	LITERAL	1	\emph{'spacingAndGlyphs'}				FALSE	TextElementLengthAdjustAttribute	Specifies to the user agent, that when attempting to match the rendered text length with the value specified by the \emph{textLength} attribute, both spacing and compressing/stretching of the \emph{glyphs} are allowed.
limitingConeAngle	NUMERIC	1	<numeric>	NULL			FALSE	feSpotLightLimitingConeAngleAttribute	Specifies an angle (in degrees) that defines a cone of light emulating a spot light. Default is no cone.
local	CHARACTER	1	<string>				FALSE	ColorProfileElementLocalAttribute	Specifes a color profile by ID.
markerHeight	LENGTH	1	<length>	3			FALSE	MarkerHeightAttribute	Specifies the height of the marker viewport. Must be non-negative. The default is 3.
markerUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	MarkerUnitsAttribute	Specifies that \emph{'markerWidth'}, \emph{'markerHeight'} and any coordinate values of marker contents are in terms of the user coordinate system in effect at the time when this marker is referenced.
markerUnits	LITERAL	1	\emph{'strokeWidth'}				FALSE	MarkerUnitsAttribute	Specifies that \emph{'markerWidth'}, \emph{'markerHeight'} and any-coordinate values of the marker contents are given in terms of a coordinate system which has been scaled in such a way that the current stroke has a width of 1 in that system.
markerWidth	LENGTH	1	<length>	3			FALSE	MarkerWidthAttribute	Specifies the width of the marker. Default=3.
maskContentUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	MaskElementMaskContentUnitsAttribute	Specifies that the coordinate system for contents is given terms of the user coordinate system in effect at the time of \strong{mask} referencing.
maskContentUnits	LITERAL	1	\emph{'objectBoundingBox'}				FALSE	MaskElementMaskContentUnitsAttribute	Specifies that the coordinate system for contents is given terms of the bounding box of the object to which the \strong{mask} is applied.
maskUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	MaskElementMaskUnitsAttribute	Specifies that the coordinate system for the mask attributes \emph{'x'}, \emph{'y'}, \emph{'width'} and \emph{'height'} represent values are given in terms of the user coordinate system effective at the time of mask referencing.
maskUnits	LITERAL	1	\emph{'objectBoundingBox'}	T			FALSE	MaskElementMaskUnitsAttribute	Specifies that the coordinate system for the mask attributes \emph{'x'}, \emph{'y'}, \emph{'width'} and \emph{'height'} are given in terms of fractions or percentages of the bounding box of the object to which the mask is applied. (Default)
mathematical	NUMERIC	1	<numeric>		1		FALSE	FontFaceElementMathematicalAttribute	Specifies, in font coordinates, for horizontally orientated \emph{glyphs}, the alignment to produce an \emph{ideographic} baseline alignment.
max	POS-CLOCKVALUE	1	<clock.value>		1-C		FALSE	MaxAttribute	Specifies the length of the maximum value of the active duration
max	LITERAL	1	\emph{'media'}		1-C		FALSE	MaxAttribute	Specifies the maximum value of the active duration as the intrinsic media duration.
media	CHARACTER	M	<media-descriptors>[N]	all			FALSE	StyleElementMediaAttribute	Specifies the intended destination medium for style information Default is \emph{all} .
method	LITERAL	1	\emph{'align'}				FALSE	TextPathElementMethodAttribute	Specifies for rendering that uses simple 2x3 transformations with no stretching/warping of the \emph{glyphs}.
method	LITERAL	1	\emph{'stretch'}				FALSE	TextPathElementMethodAttribute	Specifies that rendering will convert glyph outlines to paths with endpoints and control points adjusted to be normal to the path producing possible stetching and warping. This approach is taken to insure connected \emph{glyphs} remain connect along the path.
min	POS-CLOCKVALUE	1	<clock.value>		1-C		FALSE	MinAttribute	Specifies the length of the minimum value of the active duration
min	LITERAL	1	\emph{'media'}		1-C		FALSE	MinAttribute	Specifies the minimum value of the active duration as the intrinsic media duration.
mode	LITERAL	1	\emph{'normal'}		1-C		FALSE	feBlendModeAttribute	Specifies the \emph{normal blending mode} See below.
mode	LITERAL	1	\emph{'multiply'}		1-C		FALSE	feBlendModeAttribute	Specifies the \emph{multiply blending mode} See below.
mode	LITERAL	1	\emph{'screen'}		1-C		FALSE	feBlendModeAttribute	Specifies the \emph{screen blending mode} See below.
mode	LITERAL	1	\emph{'darken'}		1-C		FALSE	feBlendModeAttribute	Specifies the \emph{darken blending mode} See below.
mode	LITERAL	1	\emph{'lighten'}		1-C		FALSE	feBlendModeAttribute	Specifies the \emph{lighten blending mode} See below.
name	CHARACTER	1	<name>		1		FALSE	FontFaceNameElementNameAttribute	Specifies a name of a local font.
name	CHARACTER	1	<name>				FALSE	ColorProfileElementNameAttribute	"Specifies the name of the first parameter in \emph{icc-color} specification. Note: \emph{""""""""""""""""sRGB""""""""""""""""} is predefined; and will result in the specification this being ignored."
numOctaves	POS-INTEGER	1	<integer>	1			FALSE	feTurbulenceNumOctavesAttribute	Specifies \emph{numOctaves} parameter to be used in noise function. The default is 1.
offset	NUMERIC	1	<numeric>			Details feComponentTransfer	FALSE	feComponentTransferOffsetAttribute	Specifies the \emph{offset} to be used to construct the transfer function when the type is \emph{gamma}.
offset	NUMERIC	1	<numeric | percentage>				FALSE	StopElementOffsetAttribute	Specifies a fraction (or percentage) determining location of the \strong{stop} element. For \strong{linearGradient} elements this fraction is given by distance from start to stop over the distance from start to end. Here start is the point c(x1, y1) or xy1 and end is the point c(x2, y2) or xy2. For \strong{radialGradient} elements the fraction is computed using the outermost circle and the focal point.
onabort	JS-CODE	1	<script>				FALSE	OnAbortEventAttribute	Specifies what to execute when an \emph{SVGAbort} event is fired. \emph{SvgAbort} occurs when page loading stops before an element has been allowed to be completely loaded.
onactivate	JS-CODE	1	<script>				FALSE	OnActivateEventAttribute	Specifies what to execute when a \emph{activate} event has fired and has bubbled/targeted this element. \emph{Activate} occurs through a mouse click or keypress.
onbegin	JS-CODE	1	<script>				FALSE	OnBeginEventAttribute	Specifies what to execute when a \emph{beginEvent} event is fired. A \emph{beginEvent} occurs at the start of an animation.
onclick	JS-CODE	1	<script>				FALSE	OnClickEventAttribute	Specifies what to execute when a \emph{click} event has fired and has bubbled/targeted this element. \emph{Click} is a mousedown and mouseup on the same location.
onend	JS-CODE	1	<script>				FALSE	OnEndEventAttribute	Specifies what to execute when a \emph{endEvent} event is fired. An \emph{endEvent} occurs at the end of an animation.
onerror	JS-CODE	1	<script>				FALSE	OnErrorEventAttribute	Specifies what to execute when an \emph{SVGError} event is fired. \emph{SvgErrpr} occurs when either a script error occurs or an element fails to load properly.
onfocusin	JS-CODE	1	<script>				FALSE	OnFocusInEventAttribute	Specifies what to execute when a \emph{focusin} event has fired and has bubbled/targeted this element. \emph{Focusoin} occurs when gaining focus.
onfocusout	JS-CODE	1	<script>				FALSE	OnFocusOutEventAttribute	Specifies what to execute when a \emph{focusout} event has fired and has bubbled/targeted this element. \emph{Focusout} occurs when losing focus.
onload	JS-CODE	1	<script>				FALSE	OnLoadEventAttribute	Specifies what to execute when an \emph{SVGLoad} event is fired.
onmousedown	JS-CODE	1	<script>				FALSE	OnMouseDownEventAttribute	Specifies what to execute when a \emph{mousedown} event has fired and has bubbled/targeted this element. \emph{Mousedown} occurs when the pointing device is pressed over the element.
onmousemove	JS-CODE	1	<script>				FALSE	OnMouseMoveEventAttribute	Specifies what to execute when a \emph{mousemove} event has fired and has bubbled/targeted this element. \emph{Mousemove} occurs when the pointing device ismoved over an element.
onmouseout	JS-CODE	1	<script>				FALSE	OnMouseOutEventAttribute	Specifies what to execute when a \emph{mouseout} event has fired and has bubbled/targeted this element. \emph{Mouseout} occurs when the pointing device is moved off an element.
onmouseover	JS-CODE	1	<script>				FALSE	OnMouseOverEventAttribute	Specifies what to execute when a \emph{mouseover} event has fired and has bubbled/targeted this element. \emph{Mouseover} occurs when the pointing device is onto an element.
onmouseup	JS-CODE	1	<script>				FALSE	OnMouseUpEventAttribute	Specifies what to execute when a \emph{mouseup} event has fired and has bubbled/targeted this element. \emph{Mouseup} occurs when the pointing device is released over the element.
onrepeat	JS-CODE	1	<script>				FALSE	OnRepeatEventAttribute	Specifies what to execute when a \emph{repeatEvent} event is fired. A \emph{repeatEvent} occurs at the repeat of an animation.
onresize	JS-CODE	1	<script>				FALSE	OnResizeEventAttribute	Specifies what to execute when an \emph{SVGResize} event is fired. \emph{SvgResize} event occurs after a resizing and applies only to the outermost svg element.
onscroll	JS-CODE	1	<script>				FALSE	OnScrollEventAttribute	Specifies what to execute when an \emph{SVGScroll} event is fired. \emph{SVGScroll} event occurs whenever the view is shifted. This occurs in one of two ways: direct user intervention or a change on the \emph{currentTranslate} property. The \emph{SVGScroll} event applies only to the \emph{outermost svg element}.
onunload	JS-CODE	1	<script>				FALSE	OnUnloadEventAttribute	Specifies what to execute when an \emph{SVGUnload} event is fired. \emph{SvgUnload} occurs when the svg document is removed from the window or frame.
onzoom	JS-CODE	1	<script>				FALSE	OnZoomEventAttribute	Specifies what to execute when an \emph{SVGZoom} event is fired. The \emph{SVGZoom} event occurs if zoom level of the document changes. This occurs for one of two reasons: the direct interaction by the user orchange to the \emph{currentScale Property. The }SVGZoom* event applies only to the outermost svg element.
operator	LITERAL	1	\emph{'erode'}				FALSE	feMorphologyOperatorAttribute	Specifies to \emph{erode} (to thin)
operator	LITERAL	1	\emph{'dilate'}				FALSE	feMorphologyOperatorAttribute	Specifies to \emph{dilate} (to fatten)
operator	LITERAL	1	\emph{'over'}		1-C		FALSE	feCompositeOperatorAttribute	Specifies to apply the \emph{over} operator (aka Painters algorithm) Used to display both \emph{in1} and \emph{in2} but places \emph{in1} over \emph{in2.} (aka. Painters algorithm)
operator	LITERAL	1	\emph{'in'}		1-C		FALSE	feCompositeOperatorAttribute	Specifies to apply the \emph{Porter/Duff in} operator.  Used to  display only  the portion of \emph{in1}  intersecting \emph{in2}  without displaying any portion of \emph{in2}.
operator	LITERAL	1	\emph{'out'}		1-C		FALSE	feCompositeOperatorAttribute	Specifies to apply the \emph{Porter/Duff out} operator, Used to display only the portion of \emph{in1} outside \emph{in2} and without displaying any portion of  \emph{in2}.
operator	LITERAL	1	\emph{'atop'}		1-C		FALSE	feCompositeOperatorAttribute	Specifies to apply the \emph{Porter/Duff atop} operator. Used to display the portion of  \emph{in1}  inside \emph{in2}, and the portion of  \emph{in2} outside \emph{in1}.
operator	LITERAL	1	\emph{'xor'}		1-C		FALSE	feCompositeOperatorAttribute	Specifies to apply the \emph{Porter/Duff xor} operator. Used to display  those portions  \emph{in1} and \emph{in2} that do not intersect.
operator	LITERAL	1	\emph{'arithmetic'}		1-C	LINKDEF	FALSE	feCompositeOperatorAttribute	Specifies the \emph{arithmetic} operator, which is linear in \emph{in1}, \emph{in2} and \eqn{in1 \times in2}.
order	POS-INTEGER	1,2	<numeric>[1 or 2]				FALSE	feConvolveMatrixElementOrderAttribute	Specifies the number of columns and rows to use for the \emph{kernelMatrix.} Typically usage is c(3, 3).
orient	LITERAL	1	\emph{'auto'}				FALSE	OrientAttribute	Specifies to rotate the \strong{marker} in such a way that the orientation automatically follows the path.
orient	ANGLE	1	<angle>	0			FALSE	OrientAttribute	Specifies the value of much to rotate (in degrees) the \strong{marker}.
orientation	LITERAL	1	\emph{'h'}		1-C		FALSE	GlyphElementOrientationAttribute	Specifies that the \strong{glyph element} is to be exclusively rendered in a horizontal inline progression.
orientation	LITERAL	1	\emph{'v'}		1-C		FALSE	GlyphElementOrientationAttribute	Specifies that the \strong{glyph element} is to be exclusively rendered in a  vertical inline progression.
origin	NO-EFFECT	1	<default-value>				FALSE	OriginAttribute	Specifies the origin as defined in the \emph{SMIL} specification.
overline-position	NUMERIC	1	<numeric>				FALSE	FontFaceElementOverlinePositionAttribute	Specifies, in font coordinates, the intended \emph{overline position}.
overline-thickness	NUMERIC	1	<numeric>				FALSE	FontFaceElementOverlineThicknessAttribute	Specifies, in font coordinates, the intended \emph{overline thickness}.
panose-1	INTEGER	10	[<integer>]{10}	rep(0,10)	1		FALSE	FontFaceElementPanose1Attribute	Specifies \emph{panrose} using vector of length 10. (Default=c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)). Used by Latin fonts
path	NAMED-LIST	M	<path-data-list>		N-L	Details: pathData	FALSE	PathAttribute	Specifies the path of motion as a named list, using the \emph{path-data format} with  list names drawn from the path commands \emph{(M, m, Z, z, L, l, H, h, V, v)} and values being the points for which those commands are to operate on.
path	character	M	<path-data-vector>		v	Details: pathData	FALSE	PathAttribute	Specifies the path of the motion as a vector; using the \emph{path-data format built} from path commands \emph{(M, m, Z, z, L, l, H, h, V, v)} and values being the points for which those commands are to operate on.
pathLength	NON-NEG-NUM	1	<numeric>				FALSE	PathLengthAttribute	Specifies a path length, in user units, given to the user agent whose goal is to attempt to match that value by using an appropriate amount of scaling. This can affect the rendering of text along that path, or path stroke operations and possibly even animation along the path.
patternContentUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	PatternElementPatternContentUnitsAttribute	Specifies that the coordinate system for the contents of the \strong{pattern element} is the user coordinate system at the time of the \strong{pattern element} referencing. Thus the measurement units \emph{patternContentUnits} coincides with the \emph{userSpaceUnits}.
patternContentUnits	LITERAL	1	\emph{'objectBoundingBox'}				FALSE	PatternElementPatternContentUnitsAttribute	Specifies that the coordinate system for contents of the \strong{pattern element} is given terms of the bounding box of the object to which the pattern \strong{pattern element} is applied.
patternTransform	NAMED-LIST	1	<transform-list>	Identity		Details: Transform.R	FALSE	PatternElementPatternTransformAttribute	Specifies sequence transforms of the \strong{pattern element}. Exotic effects, such as skewing can be made using these additional transforms. The default is the identity.
patternUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	PatternElementPatternUnitsAttribute	Specifies that the units for \strong{pattern element} attribute values for \emph{'x'}, \emph{'y'}, \emph{'width'} and \emph{'height'} are derived from user coordinate system effective at the time of the \strong{pattern element} referencing.
patternUnits	LITERAL	1	\emph{'objectBoundingBox'}	T			FALSE	PatternElementPatternUnitsAttribute	Specifies that the units for \strong{pattern element} attribute values for \emph{'x'}, \emph{'y'}, \emph{'width'} and \emph{'height'} are given in terms of fractions or percentages of the bounding box of the object to which the pattern is being applied. (Default)
points	PT-MATRIX	1	<coordinates>[2,N]		numeric	matrix	FALSE	PolylineElementPointsAttribute	Specifies the vertices of the \strong{polyline} by taking the points defined by the columns of this matrix, with adjacent columns corresponding to adjacent vertices. The points are interpreted in the user coordinate system.
points	PT-LIST	1	<coordinates>[[N]][2]		numeric	list	FALSE	PolylineElementPointsAttribute	Specifies the vertices of the \strong{polyline} by taking the points given in by this unnamed list, with adjacent list entries corresponding to adjacent vertices. The points are interpreted in the user coordinate system.
points	PT-MATRIX	1	<coordinates>[2,N]		numeric	matrix	FALSE	PolygonElementPointsAttribute	Specifies the vertices of the \strong{polygon} (closed \emph{polyline}) by taking the points defined by the columns of this matrix, with adjacent columns corresponding to adjacent vertices. The points are interpreted in the user coordinate system.
points	PT-LIST	1	<coordinates>[[N]][2]		numeric	list	FALSE	PolygonElementPointsAttribute	Specifies the vertices of the \strong{polygon} (closed polyine) by taking the points given in by this unnamed list, with adjacent list entries corresponding to adjacent vertices. The points are interpreted in the user coordinate system.
pointsAtX	NUMERIC	1	<coordinate>	0			FALSE	feSpotLightPointsAtXAttribute	Specifies the x-coordinate of where light source is point to. The coordinate is given in terms of the \emph{primitiveUnits} of the coordinate system  established on the \strong{filter element}. (Default=0)
pointsAtY	NUMERIC	1	<coordinate>	0			FALSE	feSpotLightPointsAtYAttribute	Specifies the y-coordinate of where light source is point to. The coordinate is given in terms of the \emph{primitiveUnits} of the coordinate system  established on the \strong{filter element}. (Default=0)
pointsAtZ	NUMERIC	1	<coordinate>	0			FALSE	feSpotLightPointsAtZAttribute	Specifies the z-coordinate of where light source is point to. The coordinate is given in terms of the \emph{primitiveUnits} of the coordinate system  established on the \strong{filter element}. (Default=0)
preserveAlpha	LITERAL	1	\emph{'FALSE'}				FALSE	feConvolveMatrixElementPreserveAlphaAttribute	Specifies to apply the \emph{convolution} to all channels, including the \emph{alpha channel}.
preserveAlpha	LITERAL	1	\emph{'TRUE'}				FALSE	feConvolveMatrixElementPreserveAlphaAttribute	Specifies to apply the \emph{convolution} to only the colors channels. (Not the \emph{alpha channel}!)
preserveAspectRatio	LITERAL	1	\emph{'<align>'}			Details preserveAspect	FALSE	PreserveAspectRatioAttribute	Specities the \emph{alignment directive} (See details below)
preserveAspectRatio	LITERAL	2	\emph{'c( <defer>, <align>)'}			Details preserveAspect	FALSE	PreserveAspectRatioAttribute	Specifies both a \emph{defer directive} and an \emph{alignment directive}. (See details below)
preserveAspectRatio	LITERAL	2	\emph{'c(<align> <meet-or-Slice>)'}			Details preserveAspect	FALSE	PreserveAspectRatioAttribute	Specifies both an \emph{alignment directive} and a \emph{meet-or-slice directive}. (See details below)
preserveAspectRatio	LITERAL	3	\emph{'c( defer <align> <meet-or-Slice>)'}			Details preserveAspect	FALSE	PreserveAspectRatioAttribute	Specifies a \emph{defer}, an \emph{alignment directive} and a \emph{meet-or-slice directive}. (See details below)
primitiveUnits	LITERAL	1	\emph{'userSpaceOnUse'}				FALSE	FilterElementPrimitiveUnitsAttribute	Specifies to interpret \emph{x, y, width, height} ( or \emph{xy, wh}) as current user coordinates.
primitiveUnits	LITERAL	1	\emph{'objectBoundingBox'}				FALSE	FilterElementPrimitiveUnitsAttribute	Specifies to interpret \emph{x, y, width, height} ( or \emph{xy, wh}) as fractions (or percentages)
r	LENGTH	1	<length>				TRUE	CircleElementRAttribute	Specifies the radius, \eqn{r} of the \strong{circle}. Note: \eqn{r\geq0}.
r	LENGTH	1	<length>				FALSE	RadialGradientElementRAttribute	Specifies the radius outermost circle of the \strong{radialGradient}. (The outermost circle being the location of the final gradient \emph{stop}.) Default is 0.50 .
radius	c(rx,ry) or r	1,2	<numeric>[1 or 2]	c(0,0)			TRUE	feMorphologyRadiusAttribute	Specifies the radii \eqn{r_x}, \eqn{r_y}, used in the x, y-directions to produce the \emph{erosion/dilation} effects. The default for \eqn{r_x} is 0, the default for \eqn{r_y} is \eqn{r_x}.
refX	COORDINATE	1	<coordinate>	0			FALSE	MarkerElementRefXAttribute	Specifies the x-coordinate of the \strong{marker} position. Default=0.
refY	COORDINATE	1	<coordinate>	0			FALSE	MarkerElementRefYAttribute	Specifies the y-coordinate of the \strong{marker} position. Default=0.
rendering-intent	LITERAL	1	\emph{'auto'}	T			FALSE	ColorProfileElementRenderingIntentAttribute	Directs the user agent to determine intent based on the content type. This is the Default.
rendering-intent	LITERAL	1	\emph{'perceptual'}				FALSE	ColorProfileElementRenderingIntentAttribute	Specifies to perserve relative \emph{color}, used often for images.
rendering-intent	LITERAL	1	\emph{'saturation'}				FALSE	ColorProfileElementRenderingIntentAttribute	Specifies to preserve \emph{saturation.}
rendering-intent	LITERAL	1	\emph{'Relative-colorimetric'}				FALSE	ColorProfileElementRenderingIntentAttribute	Specifies to not change colors that fall within the range supported by the rendering device.
rendering-intent	LITERAL	1	\emph{'Absolute-colorimetric'}				FALSE	ColorProfileElementRenderingIntentAttribute	Specifies the disable any \emph{white} point matching during color convertion. \emph{Not recommended.}
repeatCount	POS-NUM	1	<numeric>		1-C		FALSE	RepeatCountAttribute	Specifies the total number of cycles through the anaimation.  (can be fraction).
repeatCount	LITERAL	1	\emph{'indefinite'}		1-C		FALSE	RepeatCountAttribute	Specifies to repeat indefinitely.
repeatDur	CLOCKVALUE	1	<clock.value>		1-C		FALSE	RepeatDurAttribute	Specifies a duration during which the animation is repeated.
repeatDur	LITERAL	1	\emph{'indefinite'}		1-C		FALSE	RepeatDurAttribute	Specifies to repeat indefinitely.
requiredExtensions	CHARACTER	M	<extensions>[N]				FALSE	RequiredExtensionsAttribute	Specifies as a character vector, a list of \emph{IRI} references which identify the required extensions, Evaluates to true provide if all of the given extensions are supported, false otherwise. If false, element and all children are skipped. Often used with \strong{switch} element.
requiredFeatures	CHARACTER	M	<features>[N]		Unnamed list or vector		FALSE	RequiredFeaturesAttribute	Specifies a list of features. If all features are supported by the user agent, returns true, else false. Intended to be used in conjunction of \strong{switch} element.
restart	LITERAL	1	\emph{'always'}	T	1-C		FALSE	RestartAttribute	Specifies the animation can be restarted at any time. (Default).
restart	LITERAL	1	\emph{'whenNotActive'}		1-C		FALSE	RestartAttribute	Specifies the animation can only be restarted when it is not active.
restart	LITERAL	1	\emph{'never'}		1-C		FALSE	RestartAttribute	Specifies the animation cannot be restarted for the duration of the parent container.
result	CHARACTER	1	<filter-primitive-reference>				FALSE	FilterPrimitiveResultAttribute	Specifies a name that can be used to reference the result of this \emph{filter primitive} by another \emph{filter primitive} using \emph{in1} or \emph{in2}.
rotate	LITERAL	1	\emph{'auto'}				FALSE	RotateAttribute	Specifies that as the target element moves along the path, its orientation is to be continously adjusted by an \eqn{\theta(t)}, such that at any time \eqn{t} the vector \eqn{(cos(\theta(t)), sin(\theta(t))} lies in the direction of the objects trajectory. Since, at any given moment, the direction of the trajectory is a vector tangent to the path in the direction of the motion, the orientation of the element with respect to the path is continously maintained.
rotate	LITERAL	1	\emph{'auto-reverse'}				FALSE	RotateAttribute	Specifies that as the target element moves along the path, its orientation is to be continously adjusted by an \eqn{\theta(t)}, such that at any time \eqn{t} the vector \eqn{(-cos(\theta(t)), -sin(\theta(t))} lies in the direction of the objects trajectory.  Both \emph{auto} and \emph{auto-reverse}  maintain the orientation of the element with respect to the path, but the \emph{auto-reverse} image is a contionus reflection of the \emph{auto} image through a moving reference point on the path corresponding to the origin in the targets coordinate system.
rotate	ANGLE	1	<angle>	0			FALSE	RotateAttribute	Specifies to apply a constant rotational transformation on target element, where the rotational angle is the specified number of degrees.
rotate	ANGLE	M	<angle>[N]				FALSE	TextElementRotateAttribute	Specifies an additional rotation (in degrees) to be applied sequentiolly to each character. If the number of characters exceeds the number of rotations, the extra character receive the last rotation.
rotate	ANGLE	M	<angle>[N]				FALSE	TSpanElementRotateAttribute	Specifies an additional rotation (in degrees) to be applied sequentiolly to each character within this \strong{tspan}. If the number of characters exceeds the number of rotations, the extra character receive the last rotation.
rotate	ANGLE	M	<angle>[N]				FALSE	AltGlyphElementRotateAttribute	Specifies an additional rotation (in degrees) to be applied to characters within this \strong{altGlyph}. If rendering only unicode characters inside an \strong{altGlyph} element, then this specifies an aditional rotation (in degrees) to be applied sequentially for the first n characters where n is the length of the rotate-vector and applies the final rotate to the remaining characters (if any). If rendering alternate \emph{glyphs}, then dy[1] specifies a rotation to be applied to the entire sequence, while the remainder, dy[-1], is ignored.
rx	LENGTH	1	<length>				TRUE	RectElementRXAttribute	Specifies an x-radius \eqn{r_x} radius of an ellipse to be used to round off the corners of the rectangle. Note \eqn{r_x>0}.
rx	LENGTH	1	<length>				TRUE	EllipseElementRXAttribute	Specifies the x-axis radius, \eqn{r_x} of the \strong{ellipse}. Note \eqn{r_x \geq 0} is required.
ry	LENGTH	1	<length>				TRUE	RectElementRYAttribute	Specifies a y-radius \eqn{r_y} radius of an ellipse to be used to round off the corners of the rectangle. Note \eqn{r_y>0}.
ry	LENGTH	1	<length>				TRUE	EllipseElementRYAttribute	Specifies the y-axis radius, \eqn{r_y} of the \strong{ellipse}. Note \eqn{r_y \geq 0} is required.
scale	NUMERIC	1	<number>			equation	FALSE	feDisplacementMapScaleAttribute	Specifies the displacement scale factor, as given in the by the \strong{feDisplacement} Map equations. Note: a value of 0 results in no displacement.
seed	NON-NEG-INTEGER	1	<non-negative integer>	0			FALSE	feTurbulenceSeedAttribute	Specifies the seed for pseudo random number generator to be used in the \emph{noise} generation. Default is 0.
slope	ANGLE	1	<angle>	0	1		FALSE	FontFaceElementSlopeAttribute	Specifies an angle in degrees from the vertical of the dominant vertical strokes of the font. (Default=0)
slope	NUMERIC	1	<number>	1		equation	FALSE	feComponentTransferSlopeAttribute	Specifies the slope to be used to construct the \emph{transfer} function when the type is \emph{linear}.
spacing	LITERAL	1	\emph{'exact'}	TRUE			FALSE	TextPathElementSpacingAttribute	Specifies to the user agent the spacing between _glyphs_ that are to be rendered along a path to be rendered exactly without any adjustment along the path.
spacing	LITERAL	1	\emph{'auto'}				FALSE	TextPathElementSpacingAttribute	Specifies for the user agent to adjust the spacing between \emph{glyphs} using a \emph{text-on-a-path layout algorithm}. The intension is to create a better visual apeal.
specularConstant	NUMERIC	1	<number>	1			FALSE	feSpecularLightingSpecularConstantAttribute	Specifies a scaling factor for the resulting RGB components, It is the \emph{kd} in \emph{Phong lighting model}. Default=1.
specularExponent	NUMERIC	1	<number>	1			FALSE	feSpotLightSpecularExponentAttribute	Specifies the \emph{specular exponent}, which controls the shininess 0 is essentially ambient light, infinity approaching a mirror like surface. (Default=1).
specularExponent	NUMERIC	1	<number>	1			FALSE	feSpecularLightingSpecularExponentAttribute	Specifies the \emph{exponent} for \emph{specular} term, used to control how shiny the object appears . Typical values should range from 1.0 to 128.0. (128 being very shiny.) Default=1.
spreadMethod	LITERAL	1	\emph{'pad'}	T			FALSE	LinearGradientElementSpreadMethodAttribute	Specifies to extend the painting beyond the \emph{gradient} vector of the \strong{linearGradient}, by using terminal colors found at the end points. (Default)
spreadMethod	LITERAL	1	\emph{'reflect'}				FALSE	LinearGradientElementSpreadMethodAttribute	Specifies to extend the painting beyond the \emph{gradient} vector of the \strong{linearGradient}, by reflecting the gradient pattern. The reflections are continued until the entire gradient region is filled. For example, we might have a pattern of red white and blue (red at the start of the gradient vector, blue at the end), and then observe: red white blue blue white red red white blue.
spreadMethod	LITERAL	1	\emph{'repeat'}				FALSE	LinearGradientElementSpreadMethodAttribute	Specifies to extend the painting beyound the \emph{gradient} vector of the \strong{linearGradient}, by repeating the gradient pattern until the region is filled. For example, For example, we might have a pattern of red white and blue (red at the start of the gradient vector, blue at the end), and then observe: red white blue red white blue red white blue.
spreadMethod	LITERAL	1	\emph{'pad'}	T			FALSE	RadialGradientElementSpreadMethodAttribute	Specifies to extend the painting beyond the \emph{outermost-circle} of the \strong{radialGradient}, by using terminal color of the outermost circle. (Default)
spreadMethod	LITERAL	1	\emph{'reflect'}				FALSE	RadialGradientElementSpreadMethodAttribute	Specifes to extend the painting beyond the \emph{outermost-circle} of the \strong{radialGradient}, by reflecting the gradient pattern. The reflections are continued until the entire gradient region is filled. For example, we might have a pattern of red white blue (red at the \emph{focus}, blue at the \emph{outermost-circle}) and then observe: red white blue blue white red red white blue.
spreadMethod	LITERAL	1	\emph{'repeat'}				FALSE	RadialGradientElementSpreadMethodAttribute	Specifes to extend the painting beyond the \emph{outermost-circle} of the \strong{radialGradient}, by repeating the gradient pattern. The repetitions are continued until the entire gradient region is filled. For example, we might have a pattern of red white blue (red at the \emph{focus}, blue at the \emph{outermost-circle}) and then observe: red white blue red white blue red white blue.
startOffset	LENGTH	1	<length>				FALSE	TextPathElementStartOffsetAttribute	Specifies an offset measured from the starting point of the \emph{'path'} to the initial position for the current text. The offset distance is measured either in percent or in the current user coordinate system and is calculated using the user agent's distance along the path algorithm. If measured in percent, then the total distance of the path is defined to be 100 percent.
stdDeviation	c(sx, sy) or s	1,2	<numeric>[1 or 2]	c(1,1)		equation	TRUE	feGaussianBlurStdDeviationAttribute	Specifies the standard deviations \eqn{\sigma_x}, \eqn{\sigma_y} for the blur operation along the x and y axis respectively. The default for \eqn{\sigma_x} is 1, the default for \eqn{\sigma_y} is \eqn{\sigma_x}.
stemh	NUMERIC	1	<number>		1		FALSE	FontFaceElementStemhAttribute	Specifies dominant stem width if the font via \emph{units per em}.
stemv	NUMERIC	1	<number>		1		FALSE	FontFaceElementStemvAttribute	Specifies dominant vertical stem width of the \emph{glyphs} via \emph{units per em}.
stitchTiles	LITERAL	1	\emph{'stitch'}				FALSE	feTurbulenceStitchTilesAttribute	Specifies to the user agent to adjust  \emph{x-baseFrequency} \eqn{f_x} and \emph{y-baseFrequency} \eqn{f_y} values in such a way as to maintain a smooth transition at the border of the tiles containing the turbulence.
stitchTiles	LITERAL	1	\emph{'noStitch'}	T			FALSE	feTurbulenceStitchTilesAttribute	Specifies to the user agent to make no attempt to achieve smooth transitions at the borders of the tiles which contain a turbulence function. (Default)
strikethrough-position	NUMERIC	1	<number>				FALSE	FontFaceElementStrikeThroughPositionAttribute	Specifies, in font coordinates, the intended \emph{strikethrough} position.
strikethrough-thickness	NUMERIC	1	<number>				FALSE	FontFaceElementStrikeThroughThicknessAttribute	Specifies, in font coordinates, the intended \emph{strikethrough} thickness.
string	CHARACTER	M	<character>[N]		1-V		FALSE	FontFaceFormatElementStringAttribute	Specifies a list of formats supported by the referenced font. Examples are \emph{truedoc-pfr}, or \emph{opentype}.
style	CHARACTER	1	<character>				FALSE	StyleAttribute	Specifies style information for this single element.
surfaceScale	NUMERIC	1	<number>	1			FALSE	feDiffuseLightingSurfaceScaleAttribute	Specifies scaling factor to be used to scale the \emph{alpha channel} to produce the height of surface. Thus it is the maximum possible height of the surface and realized when the \emph{alpha channel} =1. The default is 1.
surfaceScale	NUMERIC	1	<number>	1			FALSE	feSpecularLightingSurfaceScaleAttribute	Specifies scaling factor to be used to scale the \emph{alpha channel} to produce the height of surface. Thus it is the maximum possible height of the surface and realized when the \emph{alpha channel} =1. The default is 1.
svg:transform	??	1	<transform>				FALSE	SVGGlobalTransformAttributeDefinition	Specifies an affine transform to be applied to the map data.
svg:transform	LITERAL	1	\emph{'none'}				FALSE	SVGGlobalTransformAttributeDefinition	Specifies that no supplemental affine transformation has been applied to the map data.
systemLanguage	CHARACTER	M	<character>[N]				FALSE	SystemLanguageAttribute	Specifies system languages.
tableValues	NUMERIC	M	<numeric>[N]			equation	FALSE	feComponentTransferTableValuesAttribute	"Specifies a numerical vector to be used to the construction of the \emph{transfer function} when the type is either \emph{""""""""""""""""table""""""""""""""""} or \emph{""""""""""""""""step""""""""""""""""}."
target	LITERAL	1	\emph{'_replace'}				FALSE	AElementTargetAttribute	Specifies to replace in the current \emph{SVG image} by the linked content. The replacement will occupy the same region and frame as the current SVG.
target	LITERAL	1	\emph{'_self'}	T			FALSE	AElementTargetAttribute	Specifies to replace in the current \emph{SVG image} by the linked content The replacement will occupy the frame as the current SVG. This is the default.
target	LITERAL	1	\emph{'_parent'}				FALSE	AElementTargetAttribute	Specifies to replace the parent frameset \emph{SVG image} by the linked content.
target	LITERAL	1	\emph{'_top'}				FALSE	AElementTargetAttribute	Specifies to replace the full window/tab (and frames) byt the linked content.
target	LITERAL	1	\emph{'_blank'}				FALSE	AElementTargetAttribute	Specifies to create a new (unnamed) window/tab display and fill with the linked content.
target	CHARACTER	1	<name>				FALSE	AElementTargetAttribute	Specifies to find an existing window/tab/pane having the target name, and if one does not exist create one. Then fill it with the linked content.
targetX	INTEGER	1	<integer>				FALSE	feConvolveMatrixElementTargetXAttribute	Specifies the placement of the \emph{convolution matrix} implied by specifying the target x-coordinate relative to the \emph{convolution} origin. By default, the \emph{convolution matrix} is centered about the target.
targetY	INTEGER	1	<integer>				FALSE	feConvolveMatrixElementTargetYAttribute	Specifies the placement of the \emph{convolution matrix} implied by specifying the target y-coordinate relative to the \emph{convolution} origin. By default, the \emph{convolution matrix} is centered about the target.
textLength	LENGTH	1	<length>				FALSE	TextElementTextLengthAttribute	Specifies a presumed total sum of all of the advance values that correspond to character data within this element to assist by the user agent to in achieving exact alignment. The presumed total sum should include the advance value on the \emph{glyph} (horizontal or vertical), the effect of properties \emph{'kerning'}, \emph{'letter.spacing'} and \emph{'word.spacing'} and any adjustments due to attributes \emph{'dx'} and \emph{'dy'} on \emph{'tspan'} elements.
textLength	LENGTH	1	<length>				FALSE	TSpanElementTextLengthAttribute	Specifies a presumed total sum of all of the advance values that correspond to character data within this element to assist by the user agent to in achieving exact alignment. The presumed total sum should include the advance value on the \emph{glyph} (horizontal or vertical), the effect of properties \emph{'kerning'}, \emph{'letter.spacing'} and \emph{'word.spacing'} and any adjustments due to attributes \emph{'dx'} and \emph{'dy'} on \emph{'tspan'} elements.
title	LITERAL	1	\emph{'advisory-title'}				FALSE	StyleElementTitleAttribute	Specifies an advisory title for the style element (HTML 4)
to	VALUE	1	<value>		1		FALSE	ToAttribute	Specifies the ending attribute value of the animation.
to	VALUE	1	<value>				FALSE	SetElementToAttribute	Specifies a new attribute value to be set to.
transform	NAMED-LIST	1	<tranform-list>			Details: Transform.R	FALSE	TransformAttribute	Specifies a named list of coordinate transforms. The order in which the transforms are applied is given by the order in the list.
type	LITERAL	1	\emph{'translate'}		1-C		FALSE	AnimateTransformElementTypeAttribute	Specifies a translational transform
type	LITERAL	1	\emph{'scale'}		1-C		FALSE	AnimateTransformElementTypeAttribute	Specifies a scaling transform
type	LITERAL	1	\emph{'rotate'}		1-C		FALSE	AnimateTransformElementTypeAttribute	Specifies a rotational transform
type	LITERAL	1	\emph{'skewX'}		1-C		FALSE	AnimateTransformElementTypeAttribute	Specifies a skew transform along the X axis
type	LITERAL	1	\emph{'skewY'}		1-C		FALSE	AnimateTransformElementTypeAttribute	Specifies a skew transform along the Y axis
type	LITERAL	1	\emph{'matrix'}	T		equation?	FALSE	feColorMatrixTypeAttribute	Specifies to interpret the \strong{feColorMatrix} values parameter as a 4x5 matrix . The result color transformation is given by premultiplying this with c(R, G.B, A, 1) Default.
type	LITERAL	1	\emph{'saturate'}				FALSE	feColorMatrixTypeAttribute	Specifies that the values parameter is a single numeric between 0 and 1. used to perform color saturation.
type	LITERAL	1	\emph{'hueRotate'}				FALSE	feColorMatrixTypeAttribute	Specifies that the values parameter is a single numeric representing degrees between 0 and 360, and is . used to perform hue rotation.
type	LITERAL	1	\emph{'luminanceToAlpha'}				FALSE	feColorMatrixTypeAttribute	Specifies to produce a \emph{luminance} to \emph{alpha} effect, and does not use values
type	LITERAL	1	\emph{'identity'}		1-C	Details: feComponentMap.R	FALSE	feComponentTransferTypeAttribute	Specifies the identify component transform (i.e. no transform).
type	LITERAL	1	\emph{'table'}		1-C	Details: feComponentMap.R	FALSE	feComponentTransferTypeAttribute	Specifies to use a \emph{linear} interpolation of the given tableValues for the \emph{transfer function}.
type	LITERAL	1	\emph{'discrete'}		1-C	Details: feComponentMap.R	FALSE	feComponentTransferTypeAttribute	Specifies to use a \emph{step} function produced by the tableValues for the \emph{transfer function}.
type	LITERAL	1	\emph{'linear'}		1-C	Details: feComponentMap.R	FALSE	feComponentTransferTypeAttribute	Specifies to use a \emph{simple linear interpolation} for the \emph{transfer function}.
type	LITERAL	1	\emph{'gamma'}		1-C	Details: feComponentMap.R	FALSE	feComponentTransferTypeAttribute	Specifies to use an \emph{exponential} for the \emph{transfer function}.
type	LITERAL	1	\emph{'fractalNoise'}				FALSE	feTurbulenceTypeAttribute	Specifies to the filter primitive to use the \emph{noise} function.
type	LITERAL	1	\emph{'turbulence'}				FALSE	feTurbulenceTypeAttribute	Specifies to the filter primitive to use the \emph{turbulence} function.
type	LITERAL	1	\emph{'content-type'}				FALSE	StyleElementTypeAttribute	"Specifies the style sheet language of the element's contents, such as \emph{""""""""""""""""text/css""""""""""""""""}."
type	CHARACTER	1	<content-type>[N]	application/ecmascript			FALSE	ScriptElementTypeAttribute	"Specifies the scripting language for the given \emph{'script'} element. Default is \emph{""""""""""""""""application/ecmascript""""""""""""""""}."
u1	CHAR or URANGE	M	<glyph-unicode>[N]				FALSE	HKernElementU1Attribute	Specifies possible 1st \emph{glyphs} in the \emph{kerning pair} using a vector of Unicode characters or Unicode ranges.
u2	CHAR or URANGE	M	<glyph-unicode>[N]				FALSE	HKernElementU2Attribute	Specifies possible 2nd \emph{glyphs} in the \emph{kerning pair} using a vector of Unicode characters or Unicode ranges.
underline-position	NUMERIC	1	<numeric>				FALSE	FontFaceElementUnderlinePositionAttribute	Specifies, in font coordinates, the intended \emph{underline position}.
underline-thickness	NUMERIC	1	<numeric>				FALSE	FontFaceElementUnderlineThicknessAttribute	Specifies, in font coordinates, the intended \emph{underline thickness}.
unicode	CHARACTER	1	<string>		1-V		FALSE	GlyphElementUnicodeAttribute	Specifies one or more Unicode characters indicating the sequence of Unicode characters which corresponds to this \emph{glyph.}
unicode-range	URANGE	M	<urange>[N] (vector-of-uranges)		1-V		FALSE	FontFaceElementUnicodeRangeAttribute	Specifies range of ISO 10646 characters covered by the \emph{font}.
units-per-em	NUMERIC	1	<numeric>	1000	1-V		FALSE	FontFaceElementUnitsPerEmAttribute	Specifies the number of coordinate units on an em square. (Default = 1000)
v-alphabetic	NUMERIC	1	<numeric>				FALSE	FontFaceElementVertAlphabeticAttribute	Specifies, in font coordinates, for vertically orientated \emph{glyphs}, the alignment to produce an \emph{alphabetic baseline alignment}.
v-hanging	NUMERIC	1	<numeric>				FALSE	FontFaceElementVertHangingAttribute	Specifies, in font coordinates, for vertically orientated \emph{glyphs}, the alignment to produce an \emph{hanging baseline alignment}.
v-ideographic	NUMERIC	1	<numeric>				FALSE	FontFaceElementVertIdeographicAttribute	Specifies, in font coordinates, for vertically orientated \emph{glyphs}, the alignment to produce an \emph{ideographic baseline alignment}.
v-mathematical	NUMERIC	1	<numeric>				FALSE	FontFaceElementVertMathematicalAttribute	Specifies, in font coordinates, for vertically orientated \emph{glyphs}, the alignment to produce an \emph{mathematical baseline alignment}.
values	LIST	1	<values>[[N]] (list-of-values)		1-L		FALSE	ValuesAttribute	Specifies an unamed list attributes values over which to iterate.
values	MATRIX	1	<values>[N,M] (matrix-of-values)		1-M		FALSE	ValuesAttribute	A matrix with columns corresponding to the attribute values. Obviously assumes that the length of each attribute value is the same. Thisos useful for defining animations involving points.
values	NUMERIC	M	<numeric>				FALSE	feColorMatrixValuesAttribute	Depends on the value for type.
version	NUMERIC	1	<numeric>				FALSE	SVGElementVersionAttribute	Specifies the \emph{SVG} language version.
vert-adv-y	NUMERIC	1	<numeric>				FALSE	FontElementVertAdvYAttribute	Specifies what the default vertical advance should be after rendering in a vertical orientation. Needs to be non-negative.
vert-adv-y	NUMERIC	1	<numeric>				FALSE	GlyphElementVertAdvYAttribute	Specifies what the default vertical advance should be after rendering in a vertical orientation. Needs to be non-negative. Default is vert-adv-y of font.
vert-origin-x	NUMERIC	1	<numeric>				FALSE	FontElementVertOriginXAttribute	Specifies the default x-coordinate of the origin for a \emph{glyph} relative to coordinate system when in text orientation is vertical. Default is half of 'horiz.adv.x.
vert-origin-x	NUMERIC	1	<numeric>				FALSE	GlyphElementVertOriginXAttribute	Specifies the default x-coordinate of the origin for a \emph{glyph} relative to coordinate system when in text orientation is vertical. Default is value of vert-origin-x of font.
vert-origin-y	NUMERIC	1	<numeric>				FALSE	FontElementVertOriginYAttribute	Specifies the default y-coordinate of the origin for a \emph{glyph} relative to coordinate system when in text orientation is vertical. Default is ascent height attribute.
vert-origin-y	NUMERIC	1	<numeric>				FALSE	GlyphElementVertOriginYAttribute	Specifies the default y-coordinate of the origin for a \emph{glyph} relative to coordinate system when in text orientation is vertical. Default is value of vert-origin-y of font.
viewBox	NUMERIC	4	<numeric>[4] ( =c(x,y,w,h))					ViewBoxAttribute	Specifies the \emph{viewbox} with c( x, y) being upper left hand corner and c(w, h) being the \emph{width} and \emph{height.}
viewTarget	CHARACTER	M	<names>				FALSE	ViewElementViewTargetAttribute	Specifies one or more targets to be associated with this view.
width	LENGTH	1	<length>	120.00%			FALSE	FilterElementWidthAttribute	Specifies the bounding box width of the \strong{filter} in terms of the \emph{filterUnits}. (default is 1.20 )
width	LENGTH	1	<length>				FALSE	FilterPrimitiveWidthAttribute	Specifies the \emph{width} of filter primitive subregion, The filter primitive subregion is a rectangular region over which both filter primitive calculations and rendering occurs.
width	LENGTH	1	<length>				FALSE	SVGElementWidthAttribute	Specifies the \emph{width} of the \strong{svg}. This applies to both for an embedded \strong{svg} and an outer-most \strong{svg} (i.e. \strong{svgR}).
width	LENGTH	1	<length>				FALSE	UseElementWidthAttribute	Specifies the \emph{width} of the rectangular region into which the referenced element by use is to be placed.
width	LENGTH	1	<length>				FALSE	ImageElementWidthAttribute	Specifies the \emph{width} of the rectangular region into which the \strong{image} element is to be placed.
width	LENGTH	1	<length>				FALSE	RectElementWidthAttribute	Specifies the \emph{width} of a rectangle (distance between the left and right sides).
width	LENGTH	1	<length>	1.2			TRUE	MaskElementWidthAttribute	Specifies the \emph{width} of the rectangle defining the offscreen buffer used in computing the masked image. The resulting masked image is the intersection of the mask and that buffer. The default width=1.2 when maskUnits=\emph{'objectBoundingBox'}. Note: \eqn{width geq 0}
width	LENGTH	1	<length>				TRUE	ForeignObjectElementWidthAttribute	Specifies the \emph{width} of the rectangular region into which into which the \emph{'foreignObject'} will be rendered. Requires \eqn{width \\geq 0}.
width	LENGTH	1	<length>				FALSE	PatternElementWidthAttribute	Specifies the title \emph{width.} (Must be non-negative)
widths	NAMED-LIST	M	<named-list-of-widths>		L-N		FALSE	FontFaceElementWidthsAttribute	Specifies \emph{glyphs} widths, given a \emph{urange} an a number representing the \emph{width.} The format is a list with names as \emph{uranges} and values as width.
x	COORDINATE	1	<coordinate>				FALSE	FilterPrimitiveXAttribute	Specifies the x-coordinate of filter primitive subregion, The filter primitive subregion is a rectangular region over which both filter primitive calculations and rendering occurs.
x	NUMERIC	1	<numeric>	0			FALSE	fePointLightXAttribute	Specifies the x-coordinate of the light source location with respect to the coordinates system on the \strong{filter} produce by \emph{primitiveUnits}. (Default=0)
x	NUMERIC	1	<numeric>	0			FALSE	feSpotLightXAttribute	Specifies the x-coordinate of the light source location with respect to the coordinates system on the \strong{filter} produced by \emph{primitiveUnits}. (Default=0)
x	COORDINATE	1	<coordinate>	0			FALSE	SVGElementXAttribute	Specifies the x-coordinate of the left hand side of an embedded \strong{svg}. This has no effect on the outer most \strong{svg}(i.e. \strong{svgR}). The default is 0.
x	COORDINATE	1	<coordinate>				FALSE	UseElementXAttribute	Specifies the x-coordinate of the left hand side rectangular region into which the referenced element by use is to be placed.
x	COORDINATE	1	<coordinate>				FALSE	ImageElementXAttribute	Specifies the x-coordinate of the left hand side rectangular region into which the image element is to be placed.
x	COORDINATE	M	<coordinate>[N]	0			FALSE	TextElementXAttribute	Specifies the absolute x-coordinate for the first n characters where n is the length of the vector x. (default is 0)
x	COORDINATE	M	<coordinate>[N]	0			FALSE	TSpanElementXAttribute	Specifies the absolute x-coordinate for the first n characters where n is the length of the vector x. (default is 0)
x	COORDINATE	M	<coordinate>				FALSE	AltGlyphElementXAttribute	Specifies corresponding absolute x-coordinates for \strong{altGlyph} element. If rendering only unicode characters inside a \strong{altGlyph} element, then this specifies the absolute x-coordinates for the first n characters where n is the length of the x-vector . If rendering alternate \emph{glyphs}, then x[1] specifies a new the absolute x-coordinate for the current text position, so that text begins as x[1], with the remainder, x[-1], being ignored.
x	NUMERIC	1	<number>				FALSE	GlyphRefElementXAttribute	Specifies the x-coordinate for the \emph{glyph} in terms of the fonts coordinate system.
x	COORDINATE	1	<coordinate>				FALSE	RectElementXAttribute	Specifies the x-coordinate of the left-hand side of the rectangle.
x	COORDINATE	1	<coordinate>	0.1			FALSE	MaskElementXAttribute	Specifies the x-coordinate of left side of a rectangle defining the offscreen buffer used in computing the masked image. The resulting masked imageis the intersection of the mask and that buffer. The default is x=.1, maskUnits=\emph{'objectBoundingBox'}).
x	COORDINATE	1	<coordinate>	0			FALSE	ForeignObjectElementXAttribute	Specifies the x-coordinate of the left side of the rectangular region into which the \emph{'foreignObject'} will be rendered. Default=0.
x	COORDINATE	1	<coordinate>				FALSE	PatternElementXAttribute	Specifies the x-coordinate of the left-hand side of a tile
x	COORDINATE	1	<coordinate>	0			FALSE	CursorElementXAttribute	Specifies x-coordinate of the point that the \strong{cursor} is pointing to. This position is expressed in the \emph{cursor's} coordinate system. The default is 0.
x-height	NUMERIC	1	<number>		1		FALSE	FontFaceElementXHeightAttribute	Specifies the height of lowercase \emph{glyphs} of the font using \emph{units per em}.
x1	COORDINATE	1	<coordinate>	0			FALSE	LineElementX1Attribute	Specifies the x-axis coordinate of the starting point of the \strong{line}. Default is zero.
x1	COORDINATE	1	<coordinate>				FALSE	LinearGradientElementX1Attribute	Specifies the x-coordinate of the starting point of the \emph{gradient} vector. Can be numeric or percentage.
x2	COORDINATE	1	<coordinate>	0			FALSE	LineElementX2Attribute	Specifies the x-axis coordinate of the ending point of the \strong{line}. Default is zero.
x2	COORDINATE	1	<coordinate>				FALSE	LinearGradientElementX2Attribute	Specifies the x-coordinate of the ending point of the \emph{gradient} vector. Can be numeric or percentage.
xChannelSelector	LITERAL	1	\emph{'R'}				FALSE	feDisplacementMapXChannelSelectorAttribute	Specifies to use the R channel from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the x-axis.
xChannelSelector	LITERAL	1	\emph{'G'}				FALSE	feDisplacementMapXChannelSelectorAttribute	Specifies to use the G channel from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the x-axis.
xChannelSelector	LITERAL	1	\emph{'B'}				FALSE	feDisplacementMapXChannelSelectorAttribute	Specifies to use the B channel from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the x-axis.
xChannelSelector	LITERAL	1	\emph{'A'}	T			FALSE	feDisplacementMapXChannelSelectorAttribute	Specifies to use the A channel from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the x-axis. (The default.)
xlink:actuate	LITERAL	1	\emph{'onLoad'}				FALSE	XLinkActuateAttribute	Specifies onLoad for Xlink-aware processors.This attribute is provided for backwards compatibility with \emph{SVG 1.1.}
xlink:actuate	LITERAL	1	\emph{'onRequest'}				FALSE	AElementXLinkActuateAttribute	Specifies for Xlink-aware processors to perform only on a trigger of post-loading event trigger, a traversal from the starting resource to the ending resource.
xlink:arcrole	IRI	1	<IRI>				FALSE	XLinkArcRoleAttribute	Specifies \emph{IRI} an optional reference to resource that describes an intended role.
xlink:href	IRI	1	<IRI>		1	<iri>	FALSE	HrefAttribute	Specifies animation target via an \emph{IRI} reference
xlink:href	IRI	1	<IRI>				FALSE	MPathElementHrefAttribute	Specifies an \emph{IRI} reference to the path element to be used to define the path motion.
xlink:href	IRI	1	<IRI>				FALSE	FontFaceUriElementHrefAttribute	Specifies the location of the referenced font
xlink:href	IRI	1	<IRI>				FALSE	FilterElementHrefAttribute	Specifies a reference to another filter element residing in the same SVG fragment.
xlink:href	IRI	1	<IRI>				FALSE	feImageElementHrefAttribute	Specifies an \emph{IRI} reference to the image source.
xlink:href	IRI	1	<IRI>				FALSE	UseElementHrefAttribute	Specifies an element or fragment to use by way of an \emph{IRI} reference. \emph{IRI} should be contained within the same document.
xlink:href	IRI	1	<IRI>				FALSE	ImageElementHrefAttribute	Specifies an image by way of an \emph{IRI} reference.
xlink:href	IRI	1	<IRI>				FALSE	AElementXLinkHrefAttribute	Specifies a reference to an object as an \emph{IRI} reference.
xlink:href	IRI	1	<IRI>				FALSE	TRefElementHrefAttribute	Specifies an \emph{IRI} reference to an element containing the content character data to be used.
xlink:href	IRI	1	<IRI>				FALSE	TextPathElementHrefAttribute	Specifies a reference to a path element along which the \emph{glyphs} should be placed.
xlink:href	IRI	1	<IRI>				FALSE	AltGlyphElementHrefAttribute	Specifies an \emph{IRI} reference to either a glyph or an altGlyphDef.
xlink:href	IRI	1	<IRI>				FALSE	GlyphRefElementHrefAttribute	Specifies a refernce to an alternative glyph.
xlink:href	IRI	1	<IRI>				FALSE	LinearGradientElementHrefAttribute	Specifes an \emph{IRI} reference to \emph{'linearGradient'} or \emph{'radialGradient'}.
xlink:href	IRI	1	<IRI>				FALSE	RadialGradientElementHrefAttribute	Specifies a reference to a gradient element (either a linearGradient or radialGradine) using an \emph{IRI} reference.
xlink:href	IRI	1	<IRI>				FALSE	PatternElementHrefAttribute	Specifies a reference to a pattern element.
xlink:href	IRI	1	<IRI>				FALSE	ScriptElementHrefAttribute	Specifies an \emph{IRI} reference the script code.
xlink:href	FN-IRI	1	<FUNCIRI>				FALSE	CursorElementHrefAttribute	Specifies a reference to the cursor image. The reference is in the form of a A Functional \emph{IRI} pointing to a file or element.
xlink:href	IRI	1	<IRI>				FALSE	ColorProfileElementHrefAttribute	Specifies a reference to an \emph{ICC profile} resource.
xlink:role	IRI	1	<IRI>				FALSE	XLinkRoleAttribute	Specifies \emph{IRI} an optional reference to resource that describes an intended role.
xlink:show	LITERAL	1	\emph{'new'}				FALSE	XLinkShowAttribute	Specifies \emph{new} to Xlink-aware processors. This attribute is provided for backwards compatibility with \emph{SVG 1.1}.
xlink:show	LITERAL	1	\emph{'replace'}				FALSE	XLinkShowAttribute	Specifies \emph{replace} to Xlink-aware processors. This attribute is provided for backwards compatibility with \emph{SVG 1.1}.
xlink:show	LITERAL	1	\emph{'embed'}				FALSE	XLinkShowAttribute	Specifies \emph{embed} to Xlink-aware processors. This attribute is provided for backwards compatibility with \emph{SVG 1.1}.
xlink:show	LITERAL	1	\emph{'other'}				FALSE	XLinkShowAttribute	Specifies \emph{other} to Xlink-aware processors. This attribute is provided for backwards compatibility with \emph{SVG 1.1}.
xlink:show	LITERAL	1	\emph{'none'}				FALSE	XLinkShowAttribute	Specifies \emph{none} to Xlink-aware processors. This attribute is provided for backwards compatibility with \emph{SVG 1.1}.
xlink:title	CHARACTER	1	<character>				FALSE	XLinkTitleAttribute	Specifies the title attribute which is used to provide an optional description of the meaning of a link or resource for humans.
xlink:type	LITERAL	1	\emph{'simple'}	simple			FALSE	XLinkTypeAttribute	Only simple is available in \emph{svg1.1}.
xml:base	IRI	1	<IRI>				FALSE	XMLBaseAttribute	Specifies a base \emph{IRI} other than the base \emph{IRI} of the document or external entity.
xml:lang	CHARACTER	1	<languageID>				FALSE	XMLLangAttribute	Specifies the language (e.g., English) to be used in the contents and/or attribute values of specific elements.
xml:space	LITERAL	1	\emph{'default'}				FALSE	XMLSpaceAttribute	Specifies to eat additional white space in character data.
xml:space	LITERAL	1	\emph{'preserve'}				FALSE	XMLSpaceAttribute	Specifies to preserved additional white space in character data.
y	COORDINATE	1	<coordinate>				FALSE	FilterPrimitiveYAttribute	Specifies the y-coordinate of filter primitive subregion, The filter primitive subregion is a rectangular region over which both filter primitive calculations and rendering occurs.
y	NUMERIC	1	<number>	0			FALSE	fePointLightYAttribute	Specifies the y-coordinate of the light source location with respect to the coordinates system on the filter produce by \emph{primitiveUnits}. (Default=0)
y	NUMERIC	1	<number>	0			FALSE	feSpotLightYAttribute	Specifies the y-coordinate of the light source location with respect to the coordinates system on the filter produce by \emph{primitiveUnits}. (Default=0)
y	COORDINATE	1	<coordinate>	0			FALSE	SVGElementYAttribute	Specifies the y-coordinate of the top side of an embedded \emph{svg}. This has no effect on the outer most \emph{svg}(i.e. \emph{svgR}). The default is 0.
y	COORDINATE	1	<coordinate>				FALSE	UseElementYAttribute	Specifies the y-coordinate of the top side rectangular region into which the referenced element by use is to be placed.
y	COORDINATE	1	<coordinate>				FALSE	ImageElementYAttribute	Specifies the y-coordinate of the top side rectangular region into which the image element is to be placed.
y	COORDINATE	M	<coordinate>	0			FALSE	TextElementYAttribute	Specifies the absolute y-coordinate for the first n characters where n is the length of the vector x. (default is 0.)
y	COORDINATE	M	<coordinate>	0			FALSE	TSpanElementYAttribute	Specifies the absolute y-coordinate for the first n characters where n is the length of the vector x. (default is 0.)
y	COORDINATE	M	<coordinate>				FALSE	AltGlyphElementYAttribute	Specifies corresponding absolute y-coordinates for \strong{altGlyph} element. If rendering only unicode characters inside an \strong{altGlyph} element, then this specifies the absolute y-coordinates for the first n characters where n is the length of the y-vector . If rendering alternate \emph{glyphs}, then y[1] specifies a new the absolute y-coordinate for the current text position, so that text begins as y[1], with the remainder, y[-1], being ignored.
y	NUMERIC	1	<number>				FALSE	GlyphRefElementYAttribute	Specifies the y-coordinate for the \emph{glyph} in terms of the fonts coordinate system.
y	COORDINATE	1	<coordinate>				FALSE	RectElementYAttribute	Specifies the y-coordinate of the top side of the rectangle.
y	COORDINATE	1	<coordinate>	0.1			FALSE	MaskElementYAttribute	Specifies the y-coordinate of top side of a rectangle defining the offscreen buffer used in computing the masked image. The resulting masked imageis the intersection of the mask and that buffer. The default is y=.1, maskUnits=\emph{'objectBoundingBox'}).
y	COORDINATE	1	<coordinate>	0			FALSE	ForeignObjectElementYAttribute	Specifies the y-coordinate of the top side of the rectangular region into which the \emph{'foreignObject'} will be rendered. Default=0.
y	COORDINATE	1	<coordinate>				FALSE	PatternElementYAttribute	Specifies the y-coordinate of the top side of a tile
y	COORDINATE	1	<coordinate>	0			FALSE	CursorElementYAttribute	Specifies the y-coordinate of the point that the cursor is pointing to. This position is expressed in the cursor's coordinate system. The default is 0.
y1	COORDINATE	1	<coordinate>	0			FALSE	LineElementY1Attribute	Specifies the y-axis coordinate of the starting point of the \strong{line} element. Default is zero.
y1	COORDINATE	1	<coordinate>				FALSE	LinearGradientElementY1Attribute	Specifies the y-coordinate of the starting point of the \emph{gradient-vector} of a \strong{linearGradient element}. Can be numeric or percentage.
y2	COORDINATE	1	<coordinate>	0			FALSE	LineElementY2Attribute	Specifies the y-axis coordinate of the ending point of the \strong{line} element. Default is zero.
y2	COORDINATE	1	<coordinate>				FALSE	LinearGradientElementY2Attribute	Specifies the y-coordinate of the ending point of the gradient-vector* of a \strong{linearGradient element}. Can be numeric or percentage.
z	NUMERIC	1	<number>	0			FALSE	fePointLightZAttribute	Specifies the z-coordinate of the light source location with respect to the coordinates system on the filter produce by \emph{primitiveUnits}. (Default=0)
z	NUMERIC	1	<number>	0			FALSE	feSpotLightZAttribute	Specifies the z-coordinate of the light source location with respect to the coordinates system on the filter produce by \emph{primitiveUnits}. (Default=0)
zoomAndPan	LITERAL	1	\emph{'disable'}				FALSE	SVGElementZoomAndPanAttribute	Specifies to the user agent that zooming is forbidden.
zoomAndPan	LITERAL	1	\emph{'magnify'}				FALSE	SVGElementZoomAndPanAttribute	Specifies for the user agent to provide controls and allow zoom and pan operations, but applies only to the outer-most svg. (i.e. svgR).
zoomAndPan	LITERAL	1	\emph{'disable'}				FALSE	ZoomAndPanAttribute	disables zooming
zoomAndPan	LITERAL	1	\emph{'magnify'}				FALSE	ZoomAndPanAttribute	enables zooming (applies only to the for outermost \emph{svg}, typically arrising from an \emph{svgR} call)
in2	LITERAL	1	\emph{'SourceGraphic'}				FALSE	feCompositeIn2Attribute	Specifies to use the original graphic source as the second input, \emph{in2}.
in2	LITERAL	1	\emph{'SourceAlpha'}				FALSE	feCompositeIn2Attribute	Specifies to use the alpha channel of original graphic source as the second input, \emph{in2}.
in2	LITERAL	1	\emph{'BackgroundImage'}				FALSE	feCompositeIn2Attribute	Specifies to use the image snapshot of the filter region at the time filter was invoked as the second input, \emph{in2}.
in2	LITERAL	1	\emph{'BackgroundAlpha'}				FALSE	feCompositeIn2Attribute	Specifies to use the the alpha channel of the filter region image as the second input, \emph{in2}.
in2	LITERAL	1	\emph{'FillPaint'}				FALSE	feCompositeIn2Attribute	Specifies to use the fill property on the target element as the second input, \emph{in2}.
in2	LITERAL	1	\emph{'StrokePaint'}				FALSE	feCompositeIn2Attribute	Specifies to use the stroke property on the target element as the second input, \emph{in2}.
in2	CHARACTER	1	<filter-primitive-reference>				FALSE	feCompositeIn2Attribute	Specifies to use the results of the referenced filter primitive as the second input, \emph{in2}.
in2	ELEMENT	1	<filterPrimitveElement>				FALSE	feCompositeIn2Attribute	Specifies to use the results of the given \emph{filterPrimitveElement} as the second input, \emph{in2}.
in2	LITERAL	1	\emph{'SourceGraphic'}				FALSE	feCompositeIn2Attribute	Specifies to take the original graphic sourceh for second input, \emph{in2}.
x	COORDINATE	1	<coordinate>	-10.00%			FALSE	FilterElementXAttribute	Specifies the left edge of the \strong{filter element} region.
y	COORDINATE	1	<coordinate>	-10.00%			FALSE	FilterElementYAttribute	Specifies the top edge of the \strong{filter element} region.
yChannelSelector	LITERAL	1	\emph{'R'}				FALSE	feDisplacementMapYChannelSelectorAttribute	Specifies to use the \emph{R-channel} from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the y-axis.
yChannelSelector	LITERAL	1	\emph{'G'}				FALSE	feDisplacementMapYChannelSelectorAttribute	Specifies to use the \emph{G-channel} from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the y-axis.
yChannelSelector	LITERAL	1	\emph{'B'}				FALSE	feDisplacementMapYChannelSelectorAttribute	Specifies to use the \emph{B-channel} from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the y-axis.
yChannelSelector	LITERAL	1	\emph{'A'}	T			FALSE	feDisplacementMapYChannelSelectorAttribute	Specifies to use the \emph{A-channel} from \emph{'in2'} to calculate a displacement of the pixels in \emph{'in1'} along the y-axis. (The default.)
ascent	NUMERIC	1	<number>				FALSE	FontFaceElementAscentAttribute	Specifies the maximum height for an unaccented \emph{glyph} where the height is given in the same units of the font coordinate system.
in2	LITERAL	1	\emph{'SourceGraphic'}				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second graphics input argument, \emph{in2}, the original graphic source.
in2	LITERAL	1	\emph{'SourceAlpha'}				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second graphics input argument, \emph{in2}, taking the alpha channel of the original graphic source.
in2	LITERAL	1	\emph{'BackgroundImage'}				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second  graphics input argument, \emph{in2}, the image snapshot of the filter region in effect at the time filter was invoked.
in2	LITERAL	1	\emph{'BackgroundAlpha'}				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second  graphics input argument, \emph{in2}, the \emph{alpha channel} of the filter region image.
in2	LITERAL	1	\emph{'FillPaint'}				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second  graphics input argument, \emph{in2}, the \emph{fill} property on the target element.
in2	LITERAL	1	\emph{'StrokePaint'}				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second  graphics input argument, \emph{in2}, the \emph{stroke} property on the target element.
in2	CHARACTER	1	<filter-primitive-reference>				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second  graphics input argument, \emph{in2}, the results of the referenced filter primitive.
in2	ELEMENT	1	<filterPrimitveElement>				FALSE	FilterPrimitiveIn2Attribute	Specifies taking as the second  graphics input argument, \emph{in2}, the results of the given filter primitive.
in1	LITERAL	1	\emph{'SourceGraphic'}				FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, the original graphic source.
in1	LITERAL	1	\emph{'SourceAlpha'}				FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, taking the alpha channel of the original graphic source.
in1	LITERAL	1	\emph{'BackgroundImage'}				FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, the image snapshot of the filter region in effect at the time filter was invoked.
in1	LITERAL	1	\emph{'BackgroundAlpha'}				FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, the \emph{alpha channel} of the filter region image.
in1	LITERAL	1	\emph{'FillPaint'}				FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, the \emph{fill} property on the target element.
in1	LITERAL	1	\emph{'StrokePaint'}				FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, the \emph{stroke} property on the target element.
in1	CHARACTER	1	<filter-primitive-reference>			in1	FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, the results of the referenced filter primitive.
in1	ELEMENT	1	<filterPrimitveElement>				FALSE	FilterPrimitiveIn1Attribute	Specifies taking as the first graphics input argument, \emph{in1}, the results of the given filter primitive.
